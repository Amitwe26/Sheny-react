{"version":3,"sources":["services/utilService.js","services/taskService.js","services/groupService.js","services/httpService.js","services/boardService.js","services/socketService.js","store/actions/boardAction.js","cmps/task/TaskAdd.jsx","assets/icons/chat.svg","cmps/group/ColorCmp.jsx","cmps/task/columns/TaskPropertyModal.jsx","cmps/task/columns/DateRange.jsx","cmps/task/columns/Notes.jsx","cmps/task/columns/ModalMembers.jsx","cmps/task/columns/TaskMembers.jsx","cmps/task/comment/CommentPreview.jsx","cmps/task/comment/CommentList.jsx","services/cloudinaryService.js","cmps/task/TaskDetails.jsx","cmps/DeleteModalBoard.jsx","cmps/task/TaskPreview.jsx","cmps/task/TaskList.jsx","cmps/group/GroupEdit.jsx","cmps/group/GroupProgressBar.jsx","cmps/group/GroupPreview.jsx","cmps/group/GroupList.jsx","cmps/group/FilterModal.jsx","cmps/group/GroupFilter.jsx","cmps/board/ActivitiesModal.jsx","cmps/board/BoardSideNavModal.jsx","cmps/board/BoardDetails.jsx","cmps/board/BoardFilter.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/BoardSideNav.jsx","services/userService.js","store/actions/userAction.js","cmps/notification/NotificationPreview.jsx","cmps/notification/NotificationList.jsx","cmps/notification/NotificationModal.jsx","assets/styles/logo/logo.png","cmps/AppHeader.jsx","assets/logo/logo3.gif","assets/logo/loader.mp4","cmps/Logo.jsx","cmps/ModalMsg.jsx","pages/BoardApp.jsx","pages/Home.jsx","cmps/TaskToWeek.jsx","cmps/ListMyWeek.jsx","assets/icons/calendar.png","pages/MyWeek.jsx","cmps/profile/ModalProfile.jsx","pages/Profile.jsx","pages/Login.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["utilService","getRandomInt","makeId","length","text","possible","i","charAt","Math","floor","random","getRandomColor","num","min","max","ceil","taskService","add","txt","board","groupId","newTask","createTask","updatedBoard","groups","find","currGroup","id","tasks","push","remove","group","filteredTasks","filter","task","update","taskIdx","findIndex","currTask","getById","addComment","comment","updatedTask","createdAt","Date","now","comments","unshift","removeMember","memberId","members","member","_id","addMember","name","tags","updatedAt","status","priority","note","dateRange","startDate","endDate","by","fullname","imgUrl","groupService","createGroup","updatedGroups","groupIdx","color","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","boardService","query","updateBoards","boards","map","boardId","boardName","user","_createBoard","savedBoard","desc","creator","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoards","dispatch","type","loadBoard","updateBoard","msg","setMsg","addBoard","removeBoard","setActiveBoard","err","window","TaskAdd","onAddTask","useState","setTask","className","style","background","opacity","onSubmit","ev","preventDefault","addTask","autoComplete","placeholder","value","onChange","target","handleChange","ColorCmp","changeColor","togglePallete","onClick","TaskPropertyModal","state","labelToAdd","copy","setState","onColorChange","stopPropagation","props","onAddLabel","pass","this","options","handleModalChange","onRemoveLabel","findLabel","option","idx","backgroundColor","Delete","cursor","borderLeftColor","hidden","Component","dateFormat","require","DateRange","isOpen","timeline","workingDays","barWidth","barColor","toggleDatePicker","handleSelect","ranges","onUpdateTask","rangeCopy","selection","calcBarWidth","showTimeline","start","end","totalTime","getTime","selectionRange","key","width","Notes","isEditable","onSave","handleNoteChange","closeModal","cols","rows","autoFocus","onKeyDown","ModalMembers","onRemoveMember","boardMembers","onAddMember","Avatar","alt","src","taskMembers","boardMember","taskMember","renderBoardMembers","TaskMembers","setIsOpen","toggleMemebers","AvatarGroup","CommentPreview","toLocaleTimeString","CommentList","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","TaskDetails","clickedInput","onUpload","img","prevState","toggleShowTextArea","onSubmitComment","onAddComment","commentCopy","loggedInUser","onFocus","required","Button","variant","DeleteModalBoard","info","keyName","onRemove","onToggleModalDelete","setKey","useEffect","TaskPreview","editMode","isShownDetails","isShownMembers","isModalShown","isStatusClicked","isPriorityClicked","isModalDeleteShown","isOver","toggleEditMode","toggleShowDetails","toggleHoverMouse","toggleUnHoverMouse","toggleShowModal","field","taskCopy","onChangeDate","date","onToggleDelete","closeDetails","label","activeBoard","found","forEach","getPropColor","notification","byUser","content","onRemoveTask","provided","dragHandleProps","onBlur","chat","onMouseEnter","onMouseOut","TaskList","onUpdateUser","droppableId","droppableProps","ref","innerRef","index","draggableId","draggableProps","GroupEdit","toggleModal","onUpdateGroup","onRemoveGroup","showPallete","setShowPallete","setIsModalDeleteShown","Fragment","ColorLens","chosenColor","copyGroup","GroupProgressBar","priorityCounter","statusCounter","data-title","toFixed","GroupPreview","showModal","handleDragEnd","ExpandMore","fontWeight","contentEditable","updatedGroup","innerText","suppressContentEditableWarning","blur","GroupList","onDragEnd","FilterModal","getGroupsForDisplay","groupName","filterBy","setFilterBy","filterGroup","newFilterBy","GroupFilter","isSearching","toggleSearch","toggleFilter","isFilterShow","ActivitiesModal","activities","togglemodalActivities","activeModal","active","BoardSideNavModal","onToggleModalOptions","onToggleEditName","onToggleAskDelete","BoardDetails","useSelector","boardReducer","userReducer","setIsFilterShow","groupsForDisplay","setGroupsForDisplay","setActivities","setActiveModal","setIsModalShown","useDispatch","history","useHistory","loadActiveBoard","match","params","setUpListeners","findActivities","userTasks","onUpdateBoardInfo","source","destination","newGroups","_reorder","newTasks","sourceGroup","destinationGroup","sourceGroupIdx","sourceGroupItems","Array","from","splice","transferedItem","destinationGroupIdx","destinationGroupItems","list","sourceIdx","destIdx","items","removedItem","_filterByType","onAddGroup","updateGroups","JSON","parse","stringify","regex","RegExp","test","newGroup","some","taskId","BoardFilter","getBoradsForDisplay","toggleSarech","Input","BoardPreview","setBoardName","editName","setEditName","toUpperCase","slice","to","onEditAndSaveName","boardCopy","BoardList","BoardSideNav","onAdd","isBarShown","setIsBarShown","isFilterShown","setIsFilterShown","isInputShown","setIsInputShown","boardsForDisplay","setBoardsForDisplay","nameNewBoard","setNameNewBoard","inputRef","useRef","toggleInput","nameWithCapital","newListBoards","AddCircleOutlineRounded","handelChange","userService","login","logout","signup","getUsers","userId","getLoggedinUser","increaseScore","addNotification","_saveLocalUser","score","userCred","sessionStorage","clear","setItem","getItem","notifications","updateUser","newUser","userCreds","NotificationPreview","NotificationList","NotificationModal","AppHeader","isNotificationModalShown","setIsNotificationModalShown","setNotifications","isNewNotification","setIsNewNotification","isHamburgerOpen","setIsHamburgerOpen","copyNotifications","newLoggedInUser","toggleHamburger","logo","title","AppsOutlined","NotificationsNone","EventNoteOutlined","ExitToAppOutlined","GitHub","LinkedIn","Logo","height","autoPlay","loop","preload","loader","ModalMsg","msgOpen","BoardApp","isLoading","setIsLoadinge","isLogo","setIsLogo","setMsgOpen","setTimeout","getBoards","onLoadBoards","onSetActiveBoard","then","path","component","Home","loggedinUser","isAdmin","username","password","email","phoneNumber","birthday","company","runDemo","TaskToWeek","setUserTasks","findTasksPerUser","changeDate","ListMyWeek","MyWeek","isTaskShown","setIsTaskShown","getBoardsForDisplay","Calendar","ModalProfile","keyModal","setValue","typeToInput","setTypeToInput","checkTypeInput","Profile","setUser","initials","setInitials","setKeyModal","loadUser","getInitials","names","split","onRemoveUser","changeInfo","Person","Mail","phone","Phone","Cake","Work","Login","isNewUser","setIsNewUser","loginCred","setLoginCred","signupCred","setSignupCred","isFocus","setIsFocus","loginHandleChange","signupHandleChange","doLogin","doSignup","signupCreds","loginSection","href","appId","autoLoad","fields","callback","firstName","join","picture","signupSection","App","Boolean","location","hostname","initialState","localLoggedinUser","users","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.553ccacc.chunk.js","sourcesContent":["export const utilService = {\n    getRandomInt,\n    makeId,\n    getRandomColor\n}\n\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction makeId(length = 5) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\nfunction getRandomColor() {\n    var colors = ['#00ca71', '#0085ff', '#fdab3d', '#e44258']\n    var num = getRandomInt(0, 4)\n    return colors[num]\n\n}\n\n","import { utilService } from './utilService';\n\n\nexport const taskService = {\n    add,\n    remove,\n    createTask,\n    update,\n    getById,\n    addComment,\n    removeMember,\n    addMember\n}\n\nfunction add(txt, board, groupId) {\n    const newTask = createTask(txt)\n    const updatedBoard = { ...board }\n    updatedBoard.groups.find(currGroup => currGroup.id === groupId)\n        .tasks.push(newTask)\n    return updatedBoard\n\n\n}\n\nfunction update(task, board, groupId) {\n    const updatedBoard = { ...board }\n    const currGroup = updatedBoard.groups.find(currGroup => currGroup.id === groupId)\n    const taskIdx = currGroup.tasks.findIndex(currTask => currTask.id === task.id)\n    currGroup.tasks[taskIdx] = { ...task }\n    return updatedBoard\n\n}\n\nfunction remove(id, board, group) {\n    const filteredTasks = group.tasks.filter(task => task.id !== id)\n    const updatedBoard = { ...board }\n    updatedBoard.groups.find(currGroup => currGroup.id === group.id)\n        .tasks = [...filteredTasks]\n    return updatedBoard\n}\n\nfunction getById(task, group) {\n    const foundTask = group.tasks.find(currTask => currTask.id === task.id);\n    return foundTask;\n}\n\nfunction addComment(comment, task) {\n    const updatedTask = { ...task }\n    comment.createdAt = Date.now()\n    updatedTask.comments.unshift(comment)\n    return updatedTask\n\n}\n\nfunction removeMember(task, memberId) {\n    const updatedTask = { ...task }\n    updatedTask.members = updatedTask.members.filter(member => member._id !== memberId)\n    return updatedTask\n}\n\nfunction addMember(task, member) {\n    const updatedTask = { ...task }\n    updatedTask.members.push(member)\n    return updatedTask\n}\n\nfunction createTask(txt) {\n    return {\n        id: utilService.makeId(),\n        name: txt,\n        tags: [\n            \"demo\",\n            \"instructions\",\n            \"tutorial\"\n        ],\n        createdAt: 1606733763732,\n        updatedAt: 1606733763732,\n        members: [],\n        status: \"New\",\n        priority: \"Low\",\n        note: \"Add notes to your task\",\n        dateRange: {\n            startDate: new Date(),\n            endDate: new Date()\n        },\n        comments: [\n            {\n                by: {\n                    _id: \"600877404b50bc8b342c1732\",\n                    fullname: \"Tair Bitan\",\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Tair_xdnngm.jpg\"\n                },\n                text: \"This is the task's chat\",\n                createdAt: Date.now()\n            },\n            {\n                by: {\n                    _id: \"600877404b50bc8b342c1733\",\n                    fullname: \"Amit Weiss\",\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Amit_cgtbfo.jpg\"\n                },\n                text: \"Here you can send comments, thoughts and updates about the task\",\n                createdAt: Date.now()\n            },\n            {\n                by: {\n                    _id: \"600877404b50bc8b342c1734\",\n                    fullname: \"Tamir Leshetz\",\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221822/Tamir_zzn3m4.jpg\"\n                },\n                text: \"Or simply chat with the task members\",\n                createdAt: Date.now()\n            }\n        ]\n    }\n}","import { taskService } from './taskService';\nimport { utilService } from './utilService';\n\n\nexport const groupService = {\n    add,\n    remove,\n    update,\n    createGroup\n}\n\nfunction add(name, board) {\n    const updatedBoard = { ...board }\n    const group = createGroup(name)\n    updatedBoard.groups.push(group)\n    return updatedBoard\n}\n\nfunction remove(groupId, board) {\n    const updatedBoard = { ...board }\n    const updatedGroups = updatedBoard.groups.filter(group => group.id !== groupId)\n    updatedBoard.groups = [...updatedGroups]\n    return updatedBoard\n}\n\nfunction update(group, board) {\n    const updatedBoard = { ...board }\n    let groupIdx = updatedBoard.groups.findIndex(currGroup => currGroup.id === group.id)\n    updatedBoard.groups[groupIdx] = { ...group }\n    return updatedBoard\n}\n\nfunction createGroup(name) {\n    return {\n        id: utilService.makeId(),\n        name,\n        createdAt: 1606733763732,\n        updatedAt: 1606733763732,\n        tasks: [\n            taskService.createTask('task1'),\n            taskService.createTask('task2'),\n            taskService.createTask('task3')\n        ],\n        color: utilService.getRandomColor()\n    }\n}","import Axios from 'axios';\n\nconst BASE_URL =\n  process.env.NODE_ENV !== 'development' ? '/' : '//localhost:3030/';\n// const BASE_URL = process.env.NODE_ENV === 'production'\n// ? '/'\n// : '//localhost:3030/'\n\nvar axios = Axios.create({\n  withCredentials: true,\n});\n\nexport const httpService = {\n  get(endpoint, data) {\n    return ajax(endpoint, 'GET', data);\n  },\n  post(endpoint, data) {\n    return ajax(endpoint, 'POST', data);\n  },\n  put(endpoint, data) {\n    return ajax(endpoint, 'PUT', data);\n  },\n  delete(endpoint, data) {\n    return ajax(endpoint, 'DELETE', data);\n  },\n};\n\nasync function ajax(endpoint, method = 'get', data = null) {\n  try {\n    const res = await axios({\n      url: `${BASE_URL}${endpoint}`,\n      method,\n      data,\n    });\n    return res.data;\n  } catch (err) {\n    console.log(\n      `Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`\n    );\n    console.dir(err);\n    if (err.response && err.response.status === 401) {\n      // window.location.assign('/#/login')\n    }\n    throw err;\n  }\n}\n","import { groupService } from './groupService'\nimport { httpService } from './httpService'\n\nconst BASE_URL = 'api/board'\n\nexport const boardService = {\n    query,\n    remove,\n    getById,\n    add,\n    update,\n    updateBoards\n}\n\n\nasync function query() {\n    const boards = await httpService.get(BASE_URL)\n    return boards\n}\n\nasync function update(board) {\n    await httpService.put(BASE_URL + '/' + board._id, board)\n}\n\nasync function remove(boardId) {\n    await httpService.delete(BASE_URL + '/' + boardId)\n}\n\nasync function getById(boardId) {\n    return await httpService.get(BASE_URL + '/' + boardId)\n}\n\nasync function add(boardName, user) {\n    const board = _createBoard(boardName, user)\n    const savedBoard = await httpService.post(BASE_URL, board)\n    return savedBoard\n}\n\nfunction updateBoards(updatedBoard, boards) {\n    return boards.map(board => {\n        if (board._id === updatedBoard._id) {\n            return updatedBoard\n        }\n        return board\n    })\n}\n\n\nfunction _createBoard(boardName, user) {\n    return {\n        name: boardName,\n        desc: 'edit your new board...',\n        status: [\n            {\n                txt: \"Completed\",\n                color: \"#00ca71\"\n            },\n            {\n                txt: \"Working on it\",\n                color: \"#fdab3d\"\n            },\n            {\n                txt: \"Stuck\",\n                color: \"#e44258\"\n            },\n            {\n                txt: \"New\",\n                color: \"gray\"\n            }\n        ],\n        priority: [\n            {\n                txt: \"Low\",\n                color: \"#00ca71\"\n            },\n            {\n                txt: \"Medium\",\n                color: \"#fdab3d\"\n            },\n            {\n                txt: \"High\",\n                color: \"#e44258\"\n            }\n        ],\n        creator: {\n            _id: user._id,\n            fullname: user.fullname,\n            imgUrl: user.imgUrl\n        },\n        groups: [\n            groupService.createGroup('group1'),\n            groupService.createGroup('group2'),\n            groupService.createGroup('group3')\n        ],\n        createdAt: Date.now(),\n        members: [\n            {\n                _id: \"600877404b50bc8b342c1732\",\n                fullname: \"Tair Bitan\",\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Tair_xdnngm.jpg\"\n            },\n            {\n                _id: \"600877404b50bc8b342c1733\",\n                fullname: \"Amit Weiss\",\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Amit_cgtbfo.jpg\"\n            },\n            {\n                _id: \"600877404b50bc8b342c1734\",\n                fullname: \"Tamir Leshetz\",\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221822/Tamir_zzn3m4.jpg\"\n            }\n        ]\n    }\n}\n\n","import io from 'socket.io-client'\n\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\nexport const socketService = createSocketService()\n\nwindow.socketService = socketService\n\n\nfunction createSocketService() {\n  var socket;\n  const socketService = {\n    setup() {\n      socket = io(baseUrl)\n    },\n    on(eventName, cb) {\n      socket.on(eventName, cb)\n    },\n    off(eventName, cb) {\n      socket.off(eventName, cb)\n    },\n    emit(eventName, data) {\n      socket.emit(eventName, data)\n    },\n    terminate() {\n      socket = null\n    }\n  }\n  return socketService\n}\n\n// eslint-disable-next-line\nfunction createDummySocketService() {\n  var listenersMap = {}\n  const socketService = {\n    setup() {\n      listenersMap = {}\n    },\n    terminate() {\n      this.setup()\n    },\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\n    },\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName].forEach(listener => {\n        listener(data)\n      })\n    },\n    debugMsg() {\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\n    },\n  }\n  return socketService\n}\n\n\n","import { boardService } from '../../services/boardService';\nimport { socketService } from '../../services/socketService';\n\nexport function loadBoards() {\n  return async (dispatch) => {\n    try {\n      const boards = await boardService.query();\n      dispatch({ type: 'SET_BOARDS', boards });\n      return boards;\n    } catch (err) {\n      console.log('Board Actions: err in loadBoards', err);\n    } finally {\n    }\n  };\n}\n\nexport function loadBoard(boardId) {\n  return async (dispatch) => {\n    try {\n      const board = await boardService.getById(boardId);\n      dispatch({ type: 'SET_BOARD', board });\n    } catch (err) {\n      console.log('Board Actions: err in loadBoard', err);\n    } finally {\n    }\n  };\n}\n\nexport function updateBoard(board, msg) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: 'SET_BOARD', board });\n      await boardService.update(board);\n      socketService.emit('board update');\n      dispatch(setMsg(msg));\n    } catch (err) {\n      dispatch(setMsg('Unsuccessfully'));\n      console.log('Board Actions: err in updateBoard', err);\n    } finally {\n    }\n  };\n}\n\nexport function addBoard(boardName, user) {\n  return async (dispatch) => {\n    try {\n      const board = await boardService.add(boardName, user);\n      dispatch({ type: 'ADD_BOARD', board });\n      dispatch({ type: 'SET_BOARD', board });\n      socketService.emit('boards update', 'added board');\n      dispatch(setMsg('Add Board successfully'));\n    } catch (err) {\n      dispatch(setMsg('Unsuccessfully'));\n      console.log('Board Actions: err in addBoard', err);\n    } finally {\n    }\n  };\n}\n\nexport function updateBoards(board, boards) {\n  return (dispatch) => {\n    try {\n      const updatedBoards = boardService.updateBoards(board, boards);\n      dispatch({ type: 'SET_BOARDS', boards: updatedBoards });\n    } catch (err) {\n      console.log('Board Actions: err in updateBoards', err);\n    } finally {\n    }\n  };\n}\n\nexport function removeBoard(boardId) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: 'REMOVE_BOARD', boardId });\n      await boardService.remove(boardId);\n      socketService.emit('boards update', 'removed board');\n      dispatch(setMsg('Remove Board successfully'));\n    } catch (err) {\n      console.log('Board Actions: err in removeBoard', err);\n    } finally {\n    }\n  };\n}\n\nexport function setActiveBoard(board) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: 'SET_BOARD', board });\n    } catch (err) {\n      console.log('Board Actions: err in set active board', err);\n    }\n  };\n}\n\nexport function setMsg(msg) {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: 'SET_MSG', msg });\n    } catch (err) {\n      console.log('Error to set MSG ', err);\n    }\n  };\n}\n","import { useState } from 'react'\nimport React from 'react'\n\nexport function TaskAdd({ onAddTask, groupId, color }) {\n    const [task, setTask] = useState({ txt: '' })\n\n    const handleChange = (ev) => {\n        const { value } = ev.target\n        const newTask = { ...task }\n        newTask.txt = value;\n        setTask(newTask)\n    };\n\n    const addTask = (ev) => {\n        ev.preventDefault()\n        onAddTask(task.txt, groupId)\n        const newTask = { txt: '', }\n        setTask(newTask)\n    }\n    return (\n        <div className=\"task-add flex\">\n            <div className=\"task-color\" style={{ background: ` ${color} `, opacity: .6 }}>\n            </div>\n            <form className=\"form\" onSubmit={(ev) => addTask(ev)}>\n                <input\n                    autoComplete=\"off\"\n                    className=\"input-task\"\n                    type=\"text\"\n                    name=\"txt\"\n                    placeholder=\"+Add\"\n                    value={task.txt}\n                    onChange={(ev) => handleChange(ev)} />\n            </form>\n        </div>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/chat.ae1f34aa.svg\";","import React from 'react'\n\nexport function ColorCmp({ changeColor, togglePallete, opacity }) {\n    return (\n        <section className='colors-container' style={{ opacity: `${opacity}` }}>\n            <button\n                className='btn-color dark-green' onClick={(ev) => { changeColor(ev, 'rgb(3, 127, 76)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color green' onClick={(ev) => { changeColor(ev, 'rgb(0, 202, 113)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color khaki' onClick={(ev) => { changeColor(ev, 'rgb(156, 211, 38)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color orange' onClick={(ev) => { changeColor(ev, 'rgb(255, 100, 46)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color light-orange' onClick={(ev) => { changeColor(ev, 'rgb(253, 171, 61)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color yellow' onClick={(ev) => { changeColor(ev, 'rgb(253, 171, 61)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color purple' onClick={(ev) => { changeColor(ev, 'rgb(120, 75, 209)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color light-purple' onClick={(ev) => { changeColor(ev, 'rgb(162, 93, 220)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color blue' onClick={(ev) => { changeColor(ev, 'rgb(0, 134, 192)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color bourdeaux' onClick={(ev) => { changeColor(ev, 'rgb(187, 51, 84)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color red' onClick={(ev) => { changeColor(ev, 'rgb(228, 66, 88)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color pink' onClick={(ev) => { changeColor(ev, 'rgb(255, 21, 138)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color black' onClick={(ev) => { changeColor(ev, 'rgb(32, 20, 17)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color brown' onClick={(ev) => { changeColor(ev, 'rgb(127, 83, 71)'); togglePallete() }}>\n            </button>\n            <button\n                className='btn-color gray' onClick={(ev) => { changeColor(ev, 'gray'); togglePallete() }}>\n            </button>\n        </section>\n    )\n}\n","import { Component } from \"react\"\nimport { ColorCmp } from \"../../group/ColorCmp\"\nimport { Delete } from '@material-ui/icons';\n\nexport class TaskPropertyModal extends Component {\n    state = {\n        labelToAdd: {\n            txt: '',\n            color: 'rgb(120, 75, 209)'\n        }\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        const copy = { ...this.state.labelToAdd }\n        copy.txt = value\n        this.setState({ labelToAdd: copy })\n    }\n\n    onColorChange = (ev, color) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        const copy = { ...this.state.labelToAdd }\n        copy.color = color\n        this.setState({ labelToAdd: copy })\n    }\n\n    onSubmit = (ev) => {\n        const copy = { ...this.state.labelToAdd }\n        copy.txt = ''\n        this.setState({ labelToAdd: copy })\n        this.props.onAddLabel(ev, this.state.labelToAdd, this.props.type)\n    }\n\n    pass = () => { }\n\n    render() {\n        const { options, type, handleModalChange, onRemoveLabel, findLabel } = this.props\n        const { labelToAdd } = this.state\n        return (\n            <div className=\" task-property-modal\">\n                {options.map((option, idx) => {\n                    return (\n                        <div\n                            className=\"option flex space-between align-center\"\n                            style={{ backgroundColor: option.color }}\n                            key={idx}\n                            onClick={() => handleModalChange(option.txt, type)}>\n                            <span className=\"text-no-overflow\">{option.txt}</span>\n                            <Delete\n                                className=\"del-btn\"\n                                style={(findLabel(option.txt, type) ? { cursor: \"no-drop\" } : {})}\n                                onClick={(ev) => {\n                                    onRemoveLabel(ev, option.txt, type)\n                                }}\n                            />\n                        </div>\n                    )\n                })\n                }\n                <form onClick={(ev) => {\n                    ev.stopPropagation()\n                }}\n                    onSubmit={(ev) => {\n                        this.onSubmit(ev)\n                    }}>\n                    <input\n                        className=\"input\"\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        value={labelToAdd.txt}\n                        placeholder={`add label...`}\n                        style={{ borderLeftColor: this.state.labelToAdd.color }}\n                    />\n                    <button type=\"submit\" hidden></button>\n                    <ColorCmp\n                        className=\"color-pallete\"\n                        changeColor={this.onColorChange}\n                        togglePallete={this.pass}\n                    />\n                </form>\n            </div >\n        )\n    }\n}\n","import { Component } from 'react';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { DateRangePicker } from 'react-date-range';\nvar dateFormat = require(\"dateformat\");\n\nexport class DateRange extends Component {\n    state = {\n        isOpen: false,\n        dateRange: {},\n        timeline: '',\n        workingDays: 0,\n        barWidth: 0,\n        barColor: null\n    }\n\n    componentDidMount() {\n        const { dateRange } = this.props.task;\n        const { group } = this.props;\n        this.setState({ dateRange, barColor: group.color }, () => {\n            this.showTimeline();\n            this.calcBarWidth(dateRange);\n        })\n    }\n\n    toggleDatePicker = () => {\n        this.setState({ isOpen: !this.state.isOpen })\n    }\n\n    handleSelect = (ranges) => {\n        const { onUpdateTask, group, task } = this.props;\n        const rangeCopy = { ...this.state.dateRange };\n        rangeCopy.startDate = ranges.selection.startDate;\n        rangeCopy.endDate = ranges.selection.endDate;\n        this.calcBarWidth(rangeCopy);\n        this.setState({ dateRange: rangeCopy }, () => {\n            this.showTimeline();\n            task.dateRange = this.state.dateRange;\n            onUpdateTask(task, group.id);\n        })\n    }\n\n    showTimeline = () => {\n        const { dateRange } = this.state;\n        let start = dateFormat(dateRange.startDate, \"mmm-dd\");\n        let end = dateFormat(dateRange.endDate, \"mmm-dd\");\n        this.setState({ timeline: `${start} - ${end}` })\n    }\n\n    calcBarWidth = (dateRange) => {\n        const totalTime = new Date(dateRange.endDate).getTime() - new Date(dateRange.startDate).getTime();\n        const elapsedTime = Date.now() - new Date(dateRange.startDate).getTime();\n        const barWidth = (elapsedTime / totalTime) * 100;\n        const workingDays = totalTime / 1000 / 60 / 60 / 24;\n        this.setState({ barWidth, workingDays });\n    }\n\n    render() {\n        const { isOpen, timeline, workingDays, dateRange, barColor, barWidth } = this.state;\n        if (dateRange === {}) return <div>Loading...</div>\n        const selectionRange = {\n            startDate: new Date(dateRange.startDate),\n            endDate: new Date(dateRange.endDate),\n            key: 'selection',\n        }\n        return (\n            <section className=\"column-date\">\n                <div className=\"date flex align-center\" onClick={this.toggleDatePicker}>\n                    <div className=\"date-bar\"\n                        style={{ backgroundColor: `${barColor}`, width: `${barWidth}%` }}\n                    >\n                    </div>\n                    <div className=\"date-content\">\n                        {timeline}\n                    </div>\n                    <div className=\"date-hover-content\">\n                        {`${workingDays}d`}\n                    </div>\n                </div>\n                <div>\n                    {isOpen && <DateRangePicker\n                        ranges={[selectionRange]}\n                        onChange={this.handleSelect}\n                    />}\n                </div>\n                {isOpen &&\n                    <div\n                        className=\"screen\"\n                        onClick={this.toggleDatePicker}\n                    />}\n            </section>\n        )\n    }\n}\n\n\n","import { Component } from 'react';\n\nexport class Notes extends Component {\n    state = {\n        note: '',\n        isEditable: false\n    }\n    componentDidMount() {\n        const { note } = this.props.task;\n        this.setState({ note })\n    }\n\n    handleChange = (ev) => {\n        this.setState({ note: ev.target.value })\n    }\n\n    onSave = (ev) => {\n        const { handleNoteChange } = this.props;\n        this.setState({ isEditable: false });\n        handleNoteChange(this.state.note);\n    }\n\n    closeModal = () => {\n        this.setState({ isEditable: false })\n    }\n\n    render() {\n        const { note, isEditable } = this.state;\n        return (\n            <section className=\"column-notes\">\n                <p className=\"editable\" onClick={() => this.setState({ isEditable: true })}>{note}</p>\n                {isEditable &&\n                    <textarea\n                        className=\"modal-edit\"\n                        cols=\"20\" rows=\"10\"\n                        autoFocus\n                        value={note}\n                        onChange={this.handleChange}\n                        onKeyDown={(ev) => {\n                            if (ev.key === 'Enter') {\n                                this.onSave(ev);\n                            }\n                        }}\n                    />}\n                {isEditable &&\n                    <div\n                        onClick={this.closeModal}\n                        className=\"screen\">\n                    </div>}\n            </section>\n        )\n    }\n}\n\n","import React from 'react';\nimport { Avatar } from '@material-ui/core';\n\nexport function ModalMembers({\n  onRemoveMember,\n  task,\n  boardMembers,\n  onAddMember,\n}) {\n  const renderBoardMembers = (taskMembers, boardMembers) => {\n    return boardMembers.map((boardMember) => {\n      if (\n        !taskMembers.find((taskMember) => taskMember._id === boardMember._id)\n      ) {\n        return (\n          <div\n            className='member-card flex align-center'\n            key={boardMember._id}\n            onClick={() => {\n              onAddMember(boardMember);\n            }}\n          >\n            <div className='member-right flex align-center'>\n              <Avatar\n                className='avatar'\n                alt={`${boardMember.fullname}`}\n                src={boardMember.imgUrl}\n              />\n              <span className='member-name'>{boardMember.fullname}</span>\n            </div>\n            <span className='member-btn'>&#43;</span>\n          </div>\n        );\n      }\n    });\n  };\n\n  return (\n    <div className='members-list'>\n      <input type='text' placeholder='Enter name' autoFocus />\n      {task.members.map((member) => {\n        return (\n          <div\n            className='member-card flex align-center'\n            key={member._id}\n            onClick={() => {\n              onRemoveMember(member._id);\n            }}\n          >\n            <div className='member-right flex align-center'>\n              <Avatar\n                className='avatar'\n                alt={`${member.fullname}`}\n                src={member.imgUrl}\n              />\n              <span className='member-name'>{member.fullname}</span>\n            </div>\n            <span className='member-btn'>&minus;</span>\n          </div>\n        );\n      })}\n      <div>\n        <div className='line'></div>\n        <span className='people'>People</span>\n      </div>\n      {renderBoardMembers(task.members, boardMembers)}\n    </div>\n  );\n}\n","import { Component, useState } from 'react';\n\nimport { Avatar } from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport { ModalMembers } from './ModalMembers';\nimport React from 'react';\n\nexport function TaskMembers({\n  task,\n  boardMembers,\n  onRemoveMember,\n  onAddMember,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleMemebers = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const renderTaskMembers = (members) => {\n    if (!members.length) {\n      return <Avatar className='avatar' src='/broken-image' />;\n    }\n    return members.map((member) => {\n      return (\n        <Avatar\n          key={member._id}\n          className='avatar'\n          alt={member.fullname}\n          src={member.imgUrl}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className='column-members'>\n      <AvatarGroup\n        max={2}\n        className='avatar-container flex center'\n        onClick={() => toggleMemebers()}\n      >\n        {renderTaskMembers(task.members)}\n      </AvatarGroup>\n      {isOpen && (\n        <ModalMembers\n          onRemoveMember={onRemoveMember}\n          task={task}\n          boardMembers={boardMembers}\n          onAddMember={onAddMember}\n        />\n      )}\n      {isOpen && <div className='screen' onClick={() => toggleMemebers()} />}\n    </div>\n  );\n}\n","import { Avatar } from '@material-ui/core';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\n\nexport function CommentPreview({ comment }) {\n    return (\n        <div className=\"comment-preview flex col\">\n\n            <div className=\"comment-author flex space-between align-center\">\n                <div className=\"flex align-center\">\n                    <Avatar\n                        className=\"author-img\"\n                        src={comment.by.imgUrl}\n                        alt=\"avatar\"\n                    />\n                    <h4 className=\"author-name\">{comment.by.fullname}</h4>\n                </div>\n                <div>\n                    <span className=\"comment-time flex align-center \">{new Date(comment.createdAt).toLocaleTimeString()}</span>\n                </div>\n            </div>\n            <span className=\"comment-text\">{comment.text}</span>\n            {comment.imgUrl && <img className=\"uploaded-img\" src={comment.imgUrl} alt=\"content\" />}\n            <div className=\"btn-comment-bottom flex\">\n                <span className=\"btn flex center align-center\"><ThumbUpAltOutlinedIcon />Like</span>\n                <span className=\"btn flex center align-center\"><ReplyIcon />Reply</span>\n            </div>\n        </div>\n    )\n}\n","import { CommentPreview } from \"./CommentPreview\";\n\nexport function CommentList({ comments }) {\n    return (\n        <div className=\"comment-list\">\n            {comments.map((comment, idx) => {\n                return <CommentPreview key={idx} comment={comment} />\n            })}\n\n        </div>\n    )\n}\n","export const cloudinaryService = {\n    uploadImg\n}\n\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"tair\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n    const UPLOAD_PRESET = \"zgpktlvr\"\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', UPLOAD_PRESET);\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n","import { Button } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Component } from 'react'\nimport { CommentList } from './comment/CommentList'\nimport { cloudinaryService } from '../../services/cloudinaryService'\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\n\nexport class TaskDetails extends Component {\n    state = {\n        clickedInput: false,\n        comment: {\n            by: {},\n            text: '',\n            imgUrl: ''\n        }\n    }\n    componentDidMount() {\n        const { loggedInUser } = this.props;\n        const by = {\n            _id: loggedInUser._id,\n            fullname: loggedInUser.fullname,\n            imgUrl: loggedInUser.imgUrl\n        }\n        const commentCopy = { ...this.state.comment }\n        commentCopy.by = by\n        this.setState({ comment: commentCopy })\n    }\n\n    onUpload = async (ev) => {\n        ev.preventDefault()\n        const img = await cloudinaryService.uploadImg(ev)\n        this.setState(prevState => {\n            return {\n                comment: {\n                    ...prevState.comment,\n                    imgUrl: img.url\n                }\n            }\n        })\n    }\n\n    toggleShowTextArea = () => {\n        this.setState({ clickedInput: !this.state.clickedInput })\n    }\n\n    onSubmitComment = (ev) => {\n        ev.preventDefault()\n        this.toggleShowTextArea()\n        this.props.onAddComment(this.state.comment)\n        const commentCopy = { ...this.state.comment }\n        commentCopy.text = ''\n        this.setState({ comment: commentCopy })\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        const commentCopy = { ...this.state.comment }\n        commentCopy.text = value\n        this.setState({ comment: commentCopy })\n    }\n\n    render() {\n        const { clickedInput, comment } = this.state\n        const { task, closeModal } = this.props\n        return (\n            <section className=\"task-details\" onClick={(ev) => ev.stopPropagation()} >\n                <CloseIcon className=\"close-icon\" onClick={closeModal} />\n                <div className=\"task-name-container\">\n                    <span>{task.name}</span>\n                </div>\n                {!clickedInput &&\n                    <input type=\"text\" onFocus={this.toggleShowTextArea} placeholder=\"Write an update ...\" />}\n                {clickedInput &&\n                    <form\n                        className=\"comment-wrapper flex col\"\n                        onSubmit={(ev) => {\n                            this.onSubmitComment(ev)\n                        }}>\n                        <textarea\n                            autoFocus={true}\n                            value={comment.text}\n                            onChange={(ev) => this.handleChange(ev)}\n                            required\n                        />\n                        <div className=\"upload-img flex col\">\n                            <label><span className=\"flex align-center\"><AttachFileIcon /> Add File</span>\n                                <input type=\"file\" onChange={(ev) => this.onUpload(ev)} name=\"\" />\n                            </label>\n                            {comment.imgUrl && <img src={comment.imgUrl} alt=\"\" />}\n                        </div>\n                        <Button\n                            className=\"update-btn\"\n                            type=\"submit\"\n                            variant=\"contained\">\n                            send\n                        </Button>\n                    </form>}\n                <CommentList comments={task.comments} />\n            </section>\n        )\n    }\n}\n","import { useEffect, useState } from 'react';\n\nexport function DeleteModalBoard({\n  info,\n  keyName,\n  onRemove,\n  onToggleModalDelete,\n  group,\n}) {\n  const [key, setKey] = useState('');\n  // const [state, setstate] = useState(initialState)\n  useEffect(() => {\n    if (keyName) setKey(keyName);\n    if (group) {\n    }\n  }, [keyName]);\n\n  const clickToRemove = () => {\n    if (keyName === 'task') {\n      onRemove(info.id, group);\n    } else if (keyName === 'group') {\n      onRemove(info.id);\n    } else {\n      onRemove(info._id);\n    }\n  };\n\n  return (\n    <div className='modal-delete flex col space-between'>\n      <div className='top'>\n        <p>\n          Are you sure want to delete {key}? \"{info.name}\"\n        </p>\n      </div>\n      <div className='bottom flex align-center'>\n        <button className='btn-delete' onClick={() => clickToRemove()}>\n          Delete\n        </button>\n        <button className='btn-go-back' onClick={() => onToggleModalDelete()}>\n          Go Back\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Delete } from '@material-ui/icons';\nimport { Component } from 'react';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nimport chat from '../../assets/icons/chat.svg';\nimport { TaskPropertyModal } from './columns/TaskPropertyModal';\nimport { DateRange } from './columns/DateRange';\nimport { Notes } from './columns/Notes';\nimport { TaskMembers } from './columns/TaskMembers';\nimport { TaskDetails } from './TaskDetails';\nimport { taskService } from '../../services/taskService';\nimport { socketService } from '../../services/socketService';\nimport { DeleteModalBoard } from '../DeleteModalBoard';\n\nexport class TaskPreview extends Component {\n    state = {\n        editMode: false,\n        task: {},\n        isShownDetails: false,\n        isShownMembers: false,\n        isModalShown: false,\n        isStatusClicked: false,\n        isPriorityClicked: false,\n        isModalDeleteShown: false,\n        isOver: false\n    }\n\n    componentDidMount() {\n        const currTask = this.props.task;\n        this.setState({ task: currTask });\n    }\n\n    toggleEditMode = () => {\n        this.setState({ editMode: !this.state.editMode })\n    }\n\n    toggleShowDetails = () => {\n        this.setState({\n            isShownDetails: !this.state.isShownDetails,\n        })\n    }\n    toggleHoverMouse = () => {\n        this.setState({ isOver: true })\n    }\n    toggleUnHoverMouse = () => {\n        this.setState({ isOver: false })\n    }\n\n    toggleShowModal = (option) => {\n\n        (option === 'status') ?\n            this.setState({\n                isStatusClicked: !this.state.isStatusClicked,\n                isModalShown: !this.state.isModalShown\n            }) :\n            this.setState({\n                isPriorityClicked: !this.state.isPriorityClicked,\n                isModalShown: !this.state.isModalShown\n            })\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n\n        const field = ev.target.name\n        const taskCopy = { ...this.state.task }\n        taskCopy[field] = value\n        this.setState({ task: taskCopy })\n\n    }\n\n    onChangeDate = (date) => {\n        const { group, task } = this.props;\n        task.dateRange = date;\n        this.props.onUpdateTask(task, group.id);\n    }\n\n    handleNoteChange = (note) => {\n        const { group, task } = this.props;\n        task.note = note;\n        this.props.onUpdateTask(task, group.id);\n    }\n\n    handleModalChange = (txt, type) => {\n        const taskCopy = { ...this.props.task }\n        taskCopy[type] = txt\n        this.setState({ task: taskCopy }, () => {\n            this.props.onUpdateTask(taskCopy, this.props.group.id)\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            isStatusClicked: false,\n            isPriorityClicked: false,\n            isModalShown: false,\n            isShownDetails: false\n        })\n    }\n\n    onToggleDelete = () => {\n        var { isModalDeleteShown } = this.state\n        this.setState({ isModalDeleteShown: !isModalDeleteShown })\n    }\n\n    closeDetails = () => {\n        this.setState({ isShownDetails: false })\n    }\n\n    onAddLabel = (ev, label, type) => {\n        ev.preventDefault()\n        this.props.activeBoard[type].push(label)\n        const { group, task } = this.props;\n        this.props.onUpdateTask(task, group.id);\n    }\n    onRemoveLabel = (ev, txt, type) => {\n        ev.stopPropagation()\n        if (this.findLabel(txt, type)) {\n            return\n        }\n        this.props.activeBoard[type] = this.props.activeBoard[type].filter(option => option.txt !== txt)\n        const { group, task } = this.props;\n        this.props.onUpdateTask(task, group.id);\n    }\n\n    findLabel = (txt, type) => {\n        let found = false\n        this.props.activeBoard.groups.forEach(group => {\n            group.tasks.forEach(task => {\n                if (task[type] === txt) {\n                    found = true\n                }\n            })\n        })\n        return found\n    }\n\n    onAddComment = (comment = {}) => {\n        const { group } = this.props;\n        const task = taskService.addComment(comment, this.props.task)\n        this.props.onUpdateTask(task, group.id)\n    }\n\n    getPropColor = (txt, type) => {\n        return this.props.activeBoard[type].find(option => option.txt === txt).color;\n    }\n\n    onRemoveMember = (memberId) => {\n        const { group, task, onUpdateTask } = this.props;\n        const updatedTask = taskService.removeMember(task, memberId)\n        onUpdateTask(updatedTask, group.id)\n    }\n\n    onAddMember = async (member) => {\n        const { group, task, onUpdateTask, loggedInUser } = this.props;\n        const updatedTask = taskService.addMember(task, member)\n        onUpdateTask(updatedTask, group.id)\n        const notification = {\n            byUser: {\n                _id: loggedInUser._id,\n                fullname: loggedInUser.fullname,\n                imgUrl: loggedInUser.imgUrl\n            },\n            content: `added ${member.fullname} to task ${task.name}`\n        }\n        socketService.emit('task add member', notification)\n    }\n\n    render() {\n        const { onRemoveTask, task, group, onUpdateTask, provided, activeBoard, loggedInUser } = this.props\n        const { editMode, isStatusClicked, isPriorityClicked, isShownDetails, isModalShown, isOver } = this.state\n        const { name } = this.state.task\n        if (!activeBoard) return <div>Loading...</div>\n\n        return (\n            <div\n                // style={{ borderLeft: `8px solid ${group.color} ` }}\n                className=\"task-preview flex space-between\">\n                <div className=\"color-group\" style={{ background: ` ${group.color} ` }}></div>\n                <div className=\"task-left flex space-between align-center\" {...provided.dragHandleProps}>\n                    <div className=\"task-left-content flex align-center text-no-overflow\">\n                        <Delete\n                            className=\"trash\"\n                            onClick={this.onToggleDelete}\n                        />\n                        {this.state.isModalDeleteShown &&\n                            <DeleteModalBoard\n                                onRemove={onRemoveTask}\n                                info={task}\n                                keyName={'task'}\n                                group={group}\n                                onToggleModalDelete={this.onToggleDelete}\n                            />}\n                        {this.state.isModalDeleteShown &&\n                            <div\n                                className=\"dark-screen-nover \"\n                                onClick={this.onToggleDelete}\n                            />}\n                        {editMode &&\n                            <form onSubmit={(ev) => {\n                                ev.preventDefault()\n                                this.toggleEditMode()\n                                onUpdateTask(this.state.task, group.id)\n                            }}>\n                                <input\n                                    name=\"name\"\n                                    value={name}\n                                    onBlur={() => {\n                                        this.toggleEditMode()\n                                        const updatedTask = { ...task }\n                                        updatedTask.name = name\n                                        onUpdateTask(updatedTask, group.id)\n                                    }}\n                                    autoComplete=\"off\"\n                                    autoFocus={true}\n                                    onChange={(ev) => this.handleChange(ev)}\n                                />\n                                <button type=\"submit\" hidden></button>\n                            </form>\n                        }\n\n                        {!editMode &&\n                            <p className=\"task-name\" onChange={(ev) => {\n                            }}>\n                                {task.name}\n                            </p>}\n                        {!editMode &&\n                            <EditIcon\n                                className=\"edit-icon\"\n                                onClick={this.toggleEditMode}\n                            >edit\n                        </EditIcon>}\n                    </div>\n                    <div\n                        className=\"task-left-chat flex end align-center\"\n                        onClick={this.toggleShowDetails} >\n                        <img\n                            src={chat}\n                            width=\"25px\"\n                            alt=\"chaticon\"\n                            className=\"icon-chat\"\n                        />\n                    </div>\n                </div>\n                <div className=\"task-right flex align-center space-between\">\n                    <TaskMembers\n                        task={task}\n                        boardMembers={activeBoard.members}\n                        onRemoveMember={this.onRemoveMember}\n                        onAddMember={this.onAddMember}\n                    />\n                    <div\n                        className={`status relative flex center align-center `}\n                        style={{ backgroundColor: this.getPropColor(task.status, 'status') }}\n                        onMouseEnter={this.toggleHoverMouse} onMouseOut={this.toggleUnHoverMouse}\n                        onClick={() => {\n                            this.toggleShowModal('status')\n                        }}>\n                        <span className=\"text-no-overflow\">\n                            {task.status}\n                        </span>\n                        {isStatusClicked && <TaskPropertyModal\n                            type=\"status\"\n                            handleModalChange={this.handleModalChange}\n                            options={activeBoard.status}\n                            onAddLabel={this.onAddLabel}\n                            onRemoveLabel={this.onRemoveLabel}\n                            findLabel={this.findLabel}\n                        />}\n                        <div className={`${(isOver) ? 'small-div' : 'small-div-close'}`}\n                            style={{ backgroundColor: this.getPropColor(task.status, 'status') }}\n                        ></div>\n                    </div>\n                    <DateRange\n                        className=\"column-date\"\n                        task={task}\n                        group={group}\n                        onUpdateTask={onUpdateTask}\n                    />\n                    <div\n                        className={`priority relative flex align-center center`}\n                        style={{ backgroundColor: this.getPropColor(task.priority, 'priority') }}\n                        onClick={() => {\n                            this.toggleShowModal('priority')\n                        }}>\n                        <span className=\"text-no-overflow\">{task.priority}</span>\n                        {isPriorityClicked &&\n                            <TaskPropertyModal\n                                type=\"priority\"\n                                handleModalChange={this.handleModalChange}\n                                options={activeBoard.priority}\n                                onAddLabel={this.onAddLabel}\n                                onRemoveLabel={this.onRemoveLabel}\n                                findLabel={this.findLabel}\n                            />}\n                    </div>\n                    <Notes task={task} handleNoteChange={this.handleNoteChange} />\n                </div>\n\n                {isModalShown && <div className=\"screen\" onClick={this.closeModal}></div>}\n                {isShownDetails && <div className=\"dark-screen\" onClick={this.closeModal}></div>}\n                {isShownDetails &&\n                    <TaskDetails\n                        groupId={group.id}\n                        task={task}\n                        onAddComment={this.onAddComment}\n                        closeModal={this.closeModal}\n                        onUpdateTask={onUpdateTask}\n                        loggedInUser={loggedInUser}\n                    />}\n            </div >\n        )\n    }\n}\n","import { TaskPreview } from \"./TaskPreview\";\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\n\nexport function TaskList({ tasks, group, onRemoveTask, onUpdateTask, activeBoard, loggedInUser, onUpdateUser }) {\n    return (\n        <section>\n            <Droppable droppableId={group.id} type=\"task\">\n                {(provided) => (\n                    <div className=\"task-list flex col\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {tasks.map((task, index) => {\n                            return (\n                                <Draggable key={task?.id} draggableId={task?.id} index={index}>\n                                    {(provided) => (\n                                        <div {...provided.draggableProps} ref={provided.innerRef}>\n                                            <TaskPreview\n                                                key={task?.id}\n                                                task={task}\n                                                group={group}\n                                                onRemoveTask={onRemoveTask}\n                                                onUpdateTask={onUpdateTask}\n                                                provided={provided}\n                                                activeBoard={activeBoard}\n                                                loggedInUser={loggedInUser}\n                                                onUpdateUser={onUpdateUser}\n                                            />\n                                        </div>\n                                    )}\n                                </Draggable>\n                            )\n                        })}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </section >\n    )\n}\n","import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ColorLens } from '@material-ui/icons';\nimport { ColorCmp } from './ColorCmp';\nimport { DeleteModalBoard } from '../DeleteModalBoard';\n\n\nexport function GroupEdit({ group, toggleModal, onUpdateGroup, onRemoveGroup }) {\n    const [showPallete, setShowPallete] = useState(false)\n    const [isModalDeleteShown, setIsModalDeleteShown] = useState(false)\n\n    const togglePallete = () => {\n        setShowPallete(!showPallete);\n    }\n\n    const changeColor = (ev, chosenColor) => {\n        ev.stopPropagation();\n        const copyGroup = { ...group };\n        copyGroup.color = chosenColor;\n        onUpdateGroup(copyGroup);\n        toggleModal();\n    }\n\n    const onToggleModalDelete = () => {\n        setIsModalDeleteShown(!isModalDeleteShown)\n    }\n\n    return (\n        <React.Fragment>\n            <section className=\"group-edit flex col \">\n                <span className=\"delete flex align-center\" onClick={() => onToggleModalDelete()}>\n                    <DeleteIcon\n                        className=\"icon-delete\"\n                    />\n                            Delete Group\n                        </span>\n                <span className=\"color flex align-center\" onClick={() => togglePallete()}>\n                    <ColorLens />\n                            Change Color\n                            {showPallete && <ColorCmp togglePallete={togglePallete} changeColor={changeColor} />}\n                </span>\n            </section>\n            {isModalDeleteShown &&\n                <DeleteModalBoard\n                    info={group}\n                    keyName={'group'}\n                    onRemove={onRemoveGroup}\n                    onToggleModalDelete={onToggleModalDelete}\n                />}\n            {isModalDeleteShown &&\n                <div\n                    className=\"dark-screen-nover \"\n                />}\n        </React.Fragment>\n    )\n}\n","\nexport function GroupProgressBar({ tasks, activeBoard }) {\n    const priorityCounter = {}\n    const statusCounter = {}\n    activeBoard.status.forEach(option => {\n        statusCounter[option.txt] = 0\n    })\n    activeBoard.priority.forEach(option => {\n        priorityCounter[option.txt] = 0\n    })\n    tasks.forEach(task => {\n        priorityCounter[task?.priority]++\n        statusCounter[task.status]++\n    })\n    return (\n        <section className=\"group-progress-bar flex\">\n            <div className=\"priority-prog-bar flex\">\n                {activeBoard.priority.map((option, idx) => {\n                    return <div\n                        key={idx}\n                        data-title=\n                        {`${option.txt} ${priorityCounter[option.txt]} / ${tasks.length}\n                         ${(priorityCounter[option.txt] / tasks.length * 100).toFixed()}%`}\n                        style=\n                        {{\n                            backgroundColor: option.color,\n                            width: (priorityCounter[option.txt] / tasks.length * 100) + '%'\n                        }}\n                    />\n                })}\n            </div>\n            <div className=\"status-prog-bar flex\">\n                {activeBoard.status.map((option, idx) => {\n                    return <div\n                        key={idx}\n                        data-title=\n                        {`${option.txt} ${statusCounter[option.txt]} / ${tasks.length}\n                         ${(statusCounter[option.txt] / tasks.length * 100).toFixed()}%`}\n                        style=\n                        {{\n                            backgroundColor: option.color,\n                            width: (statusCounter[option.txt] / tasks.length * 100) + '%'\n                        }}\n                    />\n                })}\n\n            </div>\n        </section>\n    )\n}\n","import { Component } from 'react';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\n\nimport { TaskAdd } from '../task/TaskAdd'\nimport { TaskList } from '../task/TaskList'\nimport { GroupEdit } from './GroupEdit';\nimport { ExpandMore } from '@material-ui/icons';\nimport { GroupProgressBar } from './GroupProgressBar';\n\nexport class GroupPreview extends Component {\n    state = {\n        showModal: false\n    }\n\n    toggleModal = () => {\n        var { showModal } = this.state;\n        showModal = !showModal;\n        this.setState({ showModal });\n    }\n\n    closeModal = () => {\n        this.setState({ showModal: false })\n    }\n\n    render() {\n        const { group, onAddTask, onRemoveTask, onUpdateTask, onRemoveGroup, onUpdateGroup, handleDragEnd, provided, activeBoard, loggedInUser }\n            = this.props;\n        const { showModal } = this.state;\n        return (\n            <section className=\"group-preview flex col\">\n                <div className=\"group-header flex space-between\">\n                    <div className=\"group-header-left flex\" >\n                        <span className=\"icon-drag\" {...provided.dragHandleProps}><DragIndicatorIcon /></span>\n                        <ExpandMore onClick={this.toggleModal} className=\"btn-expand\" />\n                        {showModal &&\n                            <GroupEdit\n                                onRemoveGroup={onRemoveGroup}\n                                onUpdateGroup={onUpdateGroup}\n                                group={group}\n                                toggleModal={this.toggleModal}\n                            />}\n                        <span\n                            className=\"group-name editable\"\n                            style={{ color: `${group.color}`, fontWeight: 'normal' }}\n                            contentEditable=\"true\"\n                            onBlur={(ev) => {\n                                const updatedGroup = { ...group }\n                                updatedGroup.name = ev.target.innerText\n                                onUpdateGroup(updatedGroup)\n\n                            }}\n                            suppressContentEditableWarning={true}\n                            onKeyDown={(ev) => {\n                                if (ev.key === 'Enter') {\n                                    ev.target.blur()\n                                }\n                            }}\n\n                        >\n                            {group.name}\n                        </span>\n                    </div>\n                    <div className=\"group-header-right flex\">\n                        <h5>Members</h5>\n                        <h5>Status</h5>\n                        <h5>TimeLine</h5>\n                        <h5>Priority</h5>\n                        <h5>Notes</h5>\n                    </div>\n                </div>\n                <TaskList\n                    tasks={group.tasks}\n                    group={group}\n                    onUpdateTask={onUpdateTask}\n                    onRemoveTask={onRemoveTask}\n                    handleDragEnd={handleDragEnd}\n                    activeBoard={activeBoard}\n                    loggedInUser={loggedInUser}\n                />\n                <TaskAdd\n                    onAddTask={onAddTask}\n                    groupId={group.id}\n                    color={group.color}\n                />\n                <GroupProgressBar activeBoard={activeBoard} tasks={group.tasks} />\n                { showModal && <div className=\"screen\" onClick={this.closeModal}></div>}\n            </section >\n        )\n    }\n}\n","import { GroupPreview } from './GroupPreview'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nexport function GroupList({ groups, onAddTask, onRemoveTask, onRemoveGroup, handleDragEnd, onUpdateTask, onUpdateGroup, activeBoard, loggedInUser }) {\n\n\n    return (\n        <section className=\"group-list\" >\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"groups\" type=\"group\" >\n                    {(provided) => (\n                        <div className=\"groups\" {...provided.droppableProps} ref={provided.innerRef} >\n                            {groups.map((group, index) => {\n                                return (\n                                    <Draggable key={group.id} draggableId={group.id} index={index}>\n                                        {(provided) => (\n                                            <div {...provided.draggableProps} ref={provided.innerRef}>\n                                                <GroupPreview\n                                                    onRemoveTask={onRemoveTask}\n                                                    onAddTask={onAddTask}\n                                                    group={group}\n                                                    onRemoveGroup={onRemoveGroup}\n                                                    onUpdateTask={onUpdateTask}\n                                                    onUpdateGroup={onUpdateGroup}\n                                                    handleDragEnd={handleDragEnd}\n                                                    provided={provided}\n                                                    activeBoard={activeBoard}\n                                                    loggedInUser={loggedInUser}\n                                                />\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                )\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </section>\n    )\n}\n\n","import { Component, useState } from 'react'\n\nimport { Avatar } from '@material-ui/core';\n\nimport React from 'react'\n\nexport function FilterModal({ activeBoard, getGroupsForDisplay }) {\n    const [filterBy, setFilterBy] = useState({\n        groupName: '',\n        member: '',\n        status: '',\n        priority: '',\n        date: '',\n    })\n\n    const filterGroup = (ev, field, value) => {\n        ev.stopPropagation();\n\n        const newFilterBy = { ...filterBy };\n        newFilterBy[field] = value;\n\n        setFilterBy(newFilterBy)\n        getGroupsForDisplay(newFilterBy)\n    }\n    return (\n        <section className=\"filter-modal flex\">\n            <div className=\"column\">\n                <h1>Group</h1>\n                <ul className=\"list groups clean-list\">\n                    {activeBoard.groups.map(group => {\n                        return (\n                            <li\n                                key={group.id}\n                                onClick={(ev) => filterGroup(ev, 'groupName', group.name)}\n                            >\n                                {group.name}\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n\n            <div className=\"column\">\n                <h1>Member</h1>\n                <ul className=\"list clean-list member\">\n                    {activeBoard.members.map((member) => {\n                        return (\n                            <li\n                                className=\"member-tab flex align-center\"\n                                key={member._id}\n                                onClick={(ev) => filterGroup(ev, 'member', member.fullname)}\n                            >\n                                <Avatar\n                                    className=\"avatar\"\n                                    alt={`${member.fullname}`}\n                                    src={member.imgUrl}\n                                />\n                                <span className=\"member-name\">{member.fullname}</span>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n\n            <div className=\"column\">\n                <h1>Priority</h1>\n                <ul className=\"list priorities clean-list\">\n                    {activeBoard.priority.map((priority, idx) => {\n                        return (\n                            <li\n                                key={idx}\n                                className=\"priority\"\n                                style={{ background: priority.color }}\n                                onClick={(ev) => filterGroup(ev, 'priority', priority.txt)}\n                            >\n                                {priority.txt}\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n\n            <div className=\"column\">\n                <h1>Status</h1>\n                <ul className=\"list statuses clean-list\">\n                    {activeBoard.status.map((status, idx) => {\n                        return (\n                            <li\n                                key={idx}\n                                className=\"status\"\n                                style={{ background: status.color }}\n                                onClick={(ev) => filterGroup(ev, 'status', status.txt)}\n                            >\n                                {status.txt}\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n\n            <div className=\"column\">\n                <h1>Due Date</h1>\n                <ul className=\"list dates clean-list\">\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'today')}>Today</li>\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'tomorrow')}>Tomorrow</li>\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'this week')}>This Week</li>\n                </ul>\n            </div>\n\n            <div className=\"column\">\n                <h1>Passed Date</h1>\n                <ul className=\"list dates clean-list\">\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'all passed')}>All Passed</li>\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'yesterday')}>Yesterday</li>\n                    <li onClick={(ev) => filterGroup(ev, 'date', 'last week')}>Last Week</li>\n                </ul>\n            </div>\n        </section >\n    )\n}\n\n// export class FilterModal extends Component {\n//     state = {\n//         filterBy: {\n//             groupName: '',\n//             member: '',\n//             status: '',\n//             priority: '',\n//             date: '',\n//         }\n//     }\n\n//     filterGroup = (ev, field, value) => {\n//         ev.stopPropagation();\n\n//         var filterBy = { ...this.state.filterBy };\n//         filterBy[field] = value;\n\n//         this.setState({ filterBy }, () => {\n//             this.props.getGroupsForDisplay(filterBy)\n//         })\n//     }\n\n//     render() {\n//         const { activeBoard } = this.props\n//         return (\n//             <section className=\"filter-modal flex\">\n//                 <div className=\"column\">\n//                     <h1>Group</h1>\n//                     <ul className=\"list groups clean-list\">\n//                         {activeBoard.groups.map(group => {\n//                             return (\n//                                 <li\n//                                     key={group.id}\n//                                     onClick={(ev) => this.filterGroup(ev, 'groupName', group.name)}\n//                                 >\n//                                     {group.name}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n\n//                 <div className=\"column\">\n//                     <h1>Member</h1>\n//                     <ul className=\"list clean-list member\">\n//                         {activeBoard.members.map((member) => {\n//                             return (\n//                                 <li\n//                                     className=\"member-tab flex align-center\"\n//                                     key={member._id}\n//                                     onClick={(ev) => this.filterGroup(ev, 'member', member.fullname)}\n//                                 >\n//                                     <Avatar\n//                                         className=\"avatar\"\n//                                         alt={`${member.fullname}`}\n//                                         src={member.imgUrl}\n//                                     />\n//                                     <span className=\"member-name\">{member.fullname}</span>\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n\n//                 <div className=\"column\">\n//                     <h1>Priority</h1>\n//                     <ul className=\"list priorities clean-list\">\n//                         {activeBoard.priority.map((priority, idx) => {\n//                             return (\n//                                 <li\n//                                     key={idx}\n//                                     className=\"priority\"\n//                                     style={{ background: priority.color }}\n//                                     onClick={(ev) => this.filterGroup(ev, 'priority', priority.txt)}\n//                                 >\n//                                     {priority.txt}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n\n//                 <div className=\"column\">\n//                     <h1>Status</h1>\n//                     <ul className=\"list statuses clean-list\">\n//                         {activeBoard.status.map((status, idx) => {\n//                             return (\n//                                 <li\n//                                     key={idx}\n//                                     className=\"status\"\n//                                     style={{ background: status.color }}\n//                                     onClick={(ev) => this.filterGroup(ev, 'status', status.txt)}\n//                                 >\n//                                     {status.txt}\n//                                 </li>\n//                             )\n//                         })}\n//                     </ul>\n//                 </div>\n\n//                 <div className=\"column\">\n//                     <h1>Due Date</h1>\n//                     <ul className=\"list dates clean-list\">\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'today')}>Today</li>\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'tomorrow')}>Tomorrow</li>\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'this week')}>This Week</li>\n//                     </ul>\n//                 </div>\n\n//                 <div className=\"column\">\n//                     <h1>Passed Date</h1>\n//                     <ul className=\"list dates clean-list\">\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'all passed')}>All Passed</li>\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'yesterday')}>Yesterday</li>\n//                         <li onClick={(ev) => this.filterGroup(ev, 'date', 'last week')}>Last Week</li>\n//                     </ul>\n//                 </div>\n//             </section >\n//         )\n//     }\n// }\n","import { Component } from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { FilterModal } from './FilterModal'\n\n\nexport class GroupFilter extends Component {\n    state = {\n        filterBy: {\n            txt: ''\n        },\n        isSearching: false\n    }\n\n    handleChange = (ev) => {\n        var filterBy = { ...this.state.filterBy }\n        filterBy.txt = ev.target.value;\n        this.setState({ filterBy }, () => this.props.getGroupsForDisplay(filterBy))\n    }\n\n    toggleSearch = () => {\n        this.setState({ isSearching: !this.state.isSearching })\n    }\n    render() {\n        const { activeBoard, toggleFilter, isFilterShow, groups, getGroupsForDisplay } = this.props;\n        const { isSearching } = this.state;\n        return (\n            <div className=\"filter flex align-center\">\n                <div\n                    className={`btn-search flex align-center ${isSearching && 'searching'}`}\n                    onClick={this.toggleSearch}\n                    onBlur={() => { this.setState({ isSearching: false }) }}\n                    onKeyDown={(ev) => {\n                        if (ev.key === 'Enter') {\n                            this.setState({ isSearching: false })\n                        }\n                    }}\n                >\n                    <SearchIcon />\n                    <input\n                        className=\"input-search\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        onChange={this.handleChange}\n                        placeholder=\"Search\"\n                    />\n                </div>\n                <button className=\"btn-filter flex center align-center\" onClick={toggleFilter}>\n                    {<FilterListIcon />} Filter\n                            {isFilterShow && <FilterModal activeBoard={activeBoard} groups={groups} getGroupsForDisplay={getGroupsForDisplay} />}\n                </button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport function ActivitiesModal({\n  activities,\n  togglemodalActivities,\n  activeModal,\n}) {\n  return (\n    <div\n      // className=\"activities-modal\">\n      className={`activities-modal ${activeModal ? 'modal-open' : ''}`}\n    >\n      <button onClick={() => togglemodalActivities()}>X</button>\n      <h1>Activities</h1>\n      <ul className=''>\n        <li>Activity</li>\n        <li>Last viewed</li>\n        <li>Updates</li>\n      </ul>\n      <button>Filter log</button>\n      <input type='text' placeholder='Filter by name' />\n      {activities.map((active) => {\n        return (\n          <div key={active.id} className='active-preview'>\n            <span>{active.name}</span>\n            {/* <span>Status: {active.status}</span> */}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport { DeleteModalBoard } from '../DeleteModalBoard';\n\nexport function BoardSideNavModal({\n  board,\n  onToggleModalOptions,\n  onRemove,\n  onToggleEditName,\n}) {\n  const [isModalDeleteShown, setIsModalDeleteShown] = useState(false);\n\n  const onToggleAskDelete = () => {\n    setIsModalDeleteShown(!isModalDeleteShown);\n  };\n  const onCloseModalDelete = () => {\n    // setIsModalShown(false)\n    setIsModalDeleteShown(false);\n  };\n  const toggleEdit = () => {\n    if (!onToggleEditName) return;\n    onToggleEditName();\n    onToggleModalOptions();\n  };\n  return (\n    <div className='modal-side-nave  board-modal-options flex col'>\n      <span\n        className='btn-in-modal flex align-center'\n        onClick={() => toggleEdit()}\n      >\n        <EditOutlinedIcon />\n        Rename Board\n      </span>\n      <span className='btn-in-modal flex align-center'>\n        <StarBorderTwoToneIcon />\n        Add to Favorites\n      </span>\n      <span\n        onClick={() => onToggleAskDelete()}\n        className='btn-in-modal flex align-center'\n      >\n        <DeleteIcon />\n        Delete Board\n      </span>\n      {isModalDeleteShown && (\n        <DeleteModalBoard\n          info={board}\n          keyName={'board'}\n          onRemove={onRemove}\n          onToggleModalDelete={onToggleModalOptions}\n        />\n      )}\n      {isModalDeleteShown && (\n        <div\n          className='dark-screen-nover '\n          onClick={() => onToggleAskDelete()}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  loadBoard,\n  removeBoard,\n  setMsg,\n  updateBoard,\n  updateBoards,\n} from '../../store/actions/boardAction';\n// import { updateUser, loginUser } from '../../store/actions/userAction'\n\nimport { AvatarGroup } from '@material-ui/lab';\nimport { Avatar } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport LibraryBooksOutlinedIcon from '@material-ui/icons/LibraryBooksOutlined';\n\nimport { GroupList } from '../group/GroupList';\nimport { taskService } from '../../services/taskService';\nimport { groupService } from '../../services/groupService';\nimport { socketService } from '../../services/socketService';\nimport { GroupFilter } from '../group/GroupFilter';\n\nimport { useHistory } from 'react-router';\nimport { ActivitiesModal } from './ActivitiesModal';\nimport { BoardSideNavModal } from './BoardSideNavModal';\n// import { ModalMsg } from '../ModalMsg';\n\nexport function BoardDetails(props) {\n  const { activeBoard, boards } = useSelector((state) => state.boardReducer);\n  const { loggedInUser } = useSelector((state) => state.userReducer);\n\n  const [isFilterShow, setIsFilterShow] = useState(false);\n  const [groupsForDisplay, setGroupsForDisplay] = useState(null);\n\n  const [activities, setActivities] = useState(null);\n  const [activeModal, setActiveModal] = useState(false);\n  const [isModalShown, setIsModalShown] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const loadActiveBoard = () => {\n    const { boardId } = props.match.params;\n    dispatch(loadBoard(boardId));\n  };\n\n  useEffect(() => {\n    loadActiveBoard();\n    setUpListeners();\n    socketService.emit('chat topic', props.match.params.boardId);\n    return () => {\n      socketService.off('update board');\n      socketService.off('update boards');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (activeBoard?._id !== props.match.params.boardId) {\n      socketService.emit('chat topic', props.match.params.boardId);\n      loadActiveBoard();\n    }\n  }, [props]);\n\n  useEffect(() => {\n    findActivities();\n  }, [activeBoard]);\n\n  const setUpListeners = () => {\n    socketService.on('update board', () => {\n      loadActiveBoard();\n    });\n    socketService.on('update boards', () => {\n      dispatch(loadBoard());\n      loadActiveBoard();\n    });\n  };\n\n  const findActivities = () => {\n    const userTasks = [];\n    activeBoard?.groups.forEach((group) => {\n      let tasks = group.tasks.filter((task) =>\n        task.members.find((member) => member?._id === loggedInUser._id)\n      );\n      if (tasks.length) {\n        tasks = tasks.map((task) => {\n          task.groupName = group.name;\n          return task;\n        });\n        userTasks.push(...tasks);\n      }\n    });\n    setActivities(userTasks);\n  };\n\n  const togglemodalActivities = () => {\n    if (!activities.length) {\n      dispatch(setMsg('No Activities'));\n      return;\n    }\n    setActiveModal(!activeModal);\n  };\n\n  const onRemoveBoard = (boardId) => {\n    dispatch(removeBoard(boardId));\n    if (activeBoard._id === boardId) {\n      history.push(`/board/${boards[1]._id}`);\n    }\n    onToggleModalOptions();\n  };\n\n  const onAddGroup = (groupName) => {\n    const updatedBoard = groupService.add(groupName, activeBoard);\n    dispatch(updateBoard(updatedBoard, 'Add group successfully'));\n  };\n\n  const onUpdateGroup = (group) => {\n    const updatedBoard = groupService.update(group, activeBoard);\n    dispatch(updateBoard(updatedBoard));\n  };\n\n  const onRemoveGroup = (groupId) => {\n    const updatedBoard = groupService.remove(groupId, activeBoard);\n    dispatch(updateBoard(updatedBoard, 'Remove group successfully'));\n  };\n\n  const onRemoveTask = (taskId, group) => {\n    const updatedBoard = taskService.remove(taskId, activeBoard, group);\n    dispatch(updateBoard(updatedBoard, 'Remove task successfully'));\n  };\n\n  const onAddTask = (txt, groupId) => {\n    const updatedBoard = taskService.add(txt, activeBoard, groupId);\n    dispatch(updateBoard(updatedBoard, 'Add task successfully'));\n  };\n\n  const onUpdateTask = (task, groupId) => {\n    const updatedBoard = taskService.update(task, activeBoard, groupId);\n    dispatch(updateBoard(updatedBoard, 'Update task successfully'));\n  };\n\n  const onUpdateBoardInfo = (txt, type) => {\n    const updatedBoard = { ...activeBoard };\n    updatedBoard[type] = txt;\n    dispatch(updateBoard(updatedBoard));\n    if (type === 'name') dispatch(updateBoards(updatedBoard, boards));\n  };\n  const handleDragEnd = async (res) => {\n    const { source, destination, type } = res;\n    const updatedBoard = { ...activeBoard };\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (type === 'group') {\n      const newGroups = _reorder(\n        activeBoard.groups,\n        source.index,\n        destination.index\n      );\n      updatedBoard.groups = newGroups;\n    } else if (type === 'task') {\n      if (destination.droppableId === source.droppableId) {\n        var groupIdx = activeBoard.groups.findIndex(\n          (group) => group.id === source.droppableId\n        );\n        const newTasks = _reorder(\n          activeBoard.groups[groupIdx].tasks,\n          source.index,\n          destination.index\n        );\n        updatedBoard.groups[groupIdx].tasks = newTasks;\n      } else if (destination.droppableId !== source.droppableId) {\n        const sourceGroup = source.droppableId;\n        const destinationGroup = destination.droppableId;\n        //remove task from source group\n        const sourceGroupIdx = activeBoard.groups.findIndex(\n          (group) => group.id === sourceGroup\n        );\n        const sourceGroupItems = Array.from(\n          activeBoard.groups[sourceGroupIdx].tasks\n        );\n        const [transferedItem] = sourceGroupItems.splice(source.index, 1);\n        //add task to destination group\n        const destinationGroupIdx = activeBoard.groups.findIndex(\n          (group) => group.id === destinationGroup\n        );\n        const destinationGroupItems = Array.from(\n          activeBoard.groups[destinationGroupIdx].tasks\n        );\n        destinationGroupItems.splice(destination.index, 0, transferedItem);\n        //update groups in data\n        updatedBoard.groups[sourceGroupIdx].tasks = sourceGroupItems;\n        updatedBoard.groups[destinationGroupIdx].tasks = destinationGroupItems;\n      }\n    }\n    dispatch(updateBoard(updatedBoard));\n  };\n\n  const _reorder = (list, sourceIdx, destIdx) => {\n    const items = Array.from(list);\n    const [removedItem] = items.splice(sourceIdx, 1);\n    items.splice(destIdx, 0, removedItem);\n    return items;\n  };\n\n  const toggleFilter = () => {\n    setIsFilterShow(!isFilterShow);\n  };\n  const onToggleModalOptions = () => {\n    setIsModalShown(!isModalShown);\n  };\n\n  const getGroupsForDisplay = (filterBy) => {\n    const { groups } = activeBoard;\n    var updateGroups = JSON.parse(JSON.stringify(groups));\n    var groupsForDisplay = [];\n\n    if (!filterBy) return setGroupsForDisplay(null);\n\n    if (filterBy.txt) {\n      const regex = new RegExp(filterBy.txt, 'i');\n      updateGroups.forEach((group) => {\n        if (regex.test(group.name)) groupsForDisplay.push(group);\n        else {\n          const tasks = group.tasks.filter((task) => regex.test(task.name));\n          if (tasks.length) {\n            var newGroup = { ...group };\n            newGroup.tasks = tasks;\n            groupsForDisplay.push(newGroup);\n          }\n        }\n      });\n    }\n    if (filterBy.groupName) {\n      groupsForDisplay = updateGroups.filter(\n        (currGroup) => currGroup.name === filterBy.groupName\n      );\n    }\n    if (filterBy.member) {\n      groupsForDisplay = updateGroups.filter((currGroup) => {\n        const tasks = [];\n        currGroup.tasks.forEach((task) => {\n          if (\n            task.members.some((member) => member.fullname === filterBy.member)\n          )\n            tasks.push(task);\n        });\n        if (tasks.length) {\n          currGroup.tasks = tasks;\n          return currGroup;\n        }\n        return currGroup;\n      });\n    }\n    if (filterBy.status) {\n      groupsForDisplay = updateGroups.filter((currGroup) =>\n        _filterByType(currGroup, 'status', filterBy)\n      );\n    }\n\n    if (filterBy.priority) {\n      groupsForDisplay = updateGroups.filter((currGroup) =>\n        _filterByType(currGroup, 'priority', filterBy)\n      );\n    }\n    setGroupsForDisplay(groupsForDisplay);\n  };\n\n  const _filterByType = (group, type, filterBy) => {\n    const tasks = group.tasks.filter((task) => task[type] === filterBy[type]);\n    if (tasks.length) {\n      group.tasks = tasks;\n      return group;\n    }\n  };\n  if (!activeBoard) return <div>Looks Like This Board Does Not Exist...</div>;\n  return (\n    <section className='board-details flex col'>\n      <div className='board-header-top-container flex col'>\n        <div className='board-header-top-left flex'>\n          <div\n            className='board-name editable'\n            contentEditable='true'\n            onBlur={(ev) => {\n              onUpdateBoardInfo(ev.target.innerText, 'name');\n            }}\n            suppressContentEditableWarning={true}\n            onKeyDown={(ev) => {\n              if (ev.key === 'Enter') {\n                ev.target.blur();\n              }\n            }}\n          >\n            {activeBoard.name}\n          </div>\n          <div className='board-header-top-right flex'>\n            <span>\n              <AvatarGroup max={3}>\n                {activeBoard.members.map((member) => {\n                  return (\n                    <Avatar\n                      key={member._id}\n                      className='avatar'\n                      alt={`${member.fullname}`}\n                      src={member.imgUrl}\n                    />\n                  );\n                })}\n              </AvatarGroup>\n            </span>\n            <span\n              className='activities'\n              onClick={() => togglemodalActivities()}\n            >\n              Activities / {activities?.length}\n            </span>\n            {activeModal && (\n              <ActivitiesModal\n                activities={activities}\n                activeModal={activeModal}\n                togglemodalActivities={togglemodalActivities}\n              />\n            )}\n            {activeModal && <div className='dark-screen ' />}\n            <LibraryBooksOutlinedIcon className='libary-icon' />\n            {isModalShown && (\n              <BoardSideNavModal\n                className='board-modal-options'\n                board={activeBoard}\n                onRemove={onRemoveBoard}\n                onToggleModalOptions={onToggleModalOptions}\n                // onToggleEditName={}\n              />\n            )}\n\n            {isModalShown && (\n              <div className='screen ' onClick={() => onToggleModalOptions()} />\n            )}\n\n            <MoreHorizIcon onClick={() => onToggleModalOptions()} />\n          </div>\n        </div>\n        <span\n          className='board-desc editable'\n          contentEditable='true'\n          onBlur={(ev) => {\n            onUpdateBoardInfo(ev.target.innerText, 'desc');\n          }}\n          suppressContentEditableWarning={true}\n          onKeyDown={(ev) => {\n            if (ev.key === 'Enter') {\n              ev.target.blur();\n            }\n          }}\n        >\n          {activeBoard.desc}\n        </span>\n        <div className='board-header-bottom-container flex space-between'>\n          <button className='btn-add-view'>+ Add view</button>\n          <div className='board-creator'>\n            <span\n              onClick={() => {\n                history.push(`/profile/${activeBoard.creator._id}`);\n              }}\n            >\n              Created By: {activeBoard.creator.fullname}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className='bottom-right-container flex'>\n        <button\n          className='btn-add-group'\n          onClick={() => onAddGroup('new group')}\n        >\n          New Group\n        </button>\n        <GroupFilter\n          getGroupsForDisplay={getGroupsForDisplay}\n          groups={\n            !groupsForDisplay || !groupsForDisplay.length\n              ? activeBoard.groups\n              : groupsForDisplay\n          }\n          activeBoard={activeBoard}\n          toggleFilter={toggleFilter}\n          isFilterShow={isFilterShow}\n        />\n        <MoreHorizIcon />\n      </div>\n      {isFilterShow && <div className='screen' onClick={toggleFilter} />}\n      <GroupList\n        groups={\n          !groupsForDisplay || !groupsForDisplay.length\n            ? activeBoard.groups\n            : groupsForDisplay\n        }\n        onRemoveTask={onRemoveTask}\n        onAddTask={onAddTask}\n        onUpdateTask={onUpdateTask}\n        onUpdateGroup={onUpdateGroup}\n        onRemoveGroup={onRemoveGroup}\n        handleDragEnd={handleDragEnd}\n        activeBoard={activeBoard}\n        loggedInUser={loggedInUser}\n      />\n    </section>\n  );\n}\n","import { useState } from 'react'\nimport Input from '@material-ui/core/Input';\n\nimport React from 'react'\n\nexport function BoardFilter({ getBoradsForDisplay, toggleSarech }) {\n    const [filterBy, setFilterBy] = useState({ txt: '' })\n\n    const handleChange = (ev) => {\n        const newFilterBy = { ...filterBy }\n        newFilterBy.txt = ev.target.value;\n        setFilterBy(newFilterBy)\n        getBoradsForDisplay(newFilterBy.txt);\n    }\n\n    return (\n        <section className=\"board-filter flex\">\n            <Input\n                type=\"text\"\n                name=\"name\"\n                autoFocus\n                autoComplete=\"off\"\n                placeholder=\"search\"\n                onChange={(ev) => handleChange(ev)}\n                value={filterBy.txt}>\n            </Input>\n            <button\n                className=\"btn-close\"\n                onClick={() => toggleSarech()}>\n                X\n                </button>\n        </section>\n    )\n}","import { Link } from 'react-router-dom'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport React, { useEffect, useState } from 'react';\nimport { BoardSideNavModal } from './BoardSideNavModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateBoard } from '../../store/actions/boardAction';\n\n// import React from 'react'\n\nexport function BoardPreview({ board, onRemove }) {\n    // const { boards } = useSelector(state => state.boardReducer)\n    const [isModalShown, setIsModalShown] = useState(false)\n    // const [isModalDeleteShown, setIsModalDeleteShown] = useState(false)\n    const [boardName, setBoardName] = useState('')\n    const [editName, setEditName] = useState(false)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        setBoardName(board.name)\n    }, [])\n\n    const onToggleModalOptions = () => {\n        setIsModalShown(!isModalShown)\n    }\n\n    const onToggleEditName = () => {\n        setEditName(!editName)\n    }\n\n    const handleChange = (ev) => {\n        const { value } = ev.target\n\n        const boardCopy = { ...board }\n        boardCopy.name = value\n        setBoardName(boardCopy.name)\n\n    }\n\n    const onEditAndSaveName = (ev) => {\n        ev.preventDefault()\n        onUpdateBoardInfo()\n        setEditName(false)\n    }\n\n    const onUpdateBoardInfo = () => {\n        const updatedBoard = { ...board }\n        updatedBoard.name = boardName.charAt(0).toUpperCase() + boardName.slice(1)\n        setBoardName(updatedBoard.name)\n        dispatch(updateBoard(updatedBoard, 'Update Board successfully'))\n    }\n\n    return (\n        <React.Fragment>\n            <section className=\"board-preview flex align-center\" >\n                {!editName && <Link to={`/board/${board._id}`}>\n                    {boardName}\n                </Link>}\n                {editName &&\n                    <form onSubmit={(ev) => onEditAndSaveName(ev)}>\n                        <input\n                            className=\"input-edit-board\"\n                            value={boardName}\n                            autoComplete=\"off\"\n                            autoFocus={true}\n                            onChange={(ev) => handleChange(ev)}\n                        >\n\n                        </input>\n                        <button type=\"submit\" hidden></button>\n                    </form>}\n                <MoreHorizIcon\n                    className=\"more-icon\"\n                    onClick={() => onToggleModalOptions()} />\n\n                {isModalShown &&\n                    <BoardSideNavModal\n                        board={board}\n                        onRemove={onRemove}\n                        onToggleModalOptions={onToggleModalOptions}\n                        onToggleEditName={onToggleEditName}\n                    />}\n\n                {isModalShown &&\n                    <div\n                        className=\"screen\"\n                        onClick={() => onToggleModalOptions()}\n                    />}\n\n            </section >\n        </React.Fragment>\n    )\n}","import { BoardPreview } from \"./BoardPreview\";\n\nexport function BoardList({ boards, onRemove }) {\n    return (\n        <section className=\"board-list\">\n            {boards.map(board => {\n                return <BoardPreview\n                    key={board._id}\n                    board={board}\n                    onRemove={onRemove}\n                />\n            })}\n        </section>\n    )\n}\n\n","import { useEffect, useState } from 'react';\nimport { AddCircleOutlineRounded } from '@material-ui/icons';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { BoardFilter } from './BoardFilter';\nimport { BoardList } from './BoardList';\nimport { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nexport function BoardSideNav({ onRemove, onAdd }) {\n  const { boards, msg } = useSelector((state) => state.boardReducer);\n  const { loggedInUser } = useSelector((state) => state.userReducer);\n  const [isBarShown, setIsBarShown] = useState(false);\n  const [isFilterShown, setIsFilterShown] = useState(false);\n  const [isInputShown, setIsInputShown] = useState(false);\n  const [boardsForDisplay, setBoardsForDisplay] = useState(null);\n  const [nameNewBoard, setNameNewBoard] = useState('');\n  const history = useHistory();\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    setBoardsForDisplay(boards);\n  }, [boards]);\n\n  const toggleShownBar = () => {\n    setIsBarShown(!isBarShown);\n  };\n\n  const toggleInput = () => {\n    setIsInputShown(!isInputShown);\n  };\n  const toggleSarech = () => {\n    setIsFilterShown(!isFilterShown);\n  };\n  const handelChange = (ev) => {\n    const nameNewBoard = ev.target.value;\n    setNameNewBoard(nameNewBoard);\n  };\n\n  const addBoard = async (ev) => {\n    ev.preventDefault();\n    const nameWithCapital =\n      nameNewBoard.charAt(0).toUpperCase() + nameNewBoard.slice(1);\n    await onAdd(nameWithCapital, loggedInUser);\n    toggleInput();\n  };\n  // const focus = () => {\n  //     inputRef.current.focus()\n  // }\n\n  const getBoradsForDisplay = async (filterBy) => {\n    const regex = new RegExp(filterBy, 'i');\n    const newListBoards = boards.filter((board) => regex.test(board.name));\n    setBoardsForDisplay(newListBoards);\n  };\n\n  return (\n    <section\n      className={`${\n        isBarShown ? `board-side-nav flex col` : `board-side-nav-close`\n      }`}\n    >\n      <div className='board-side-nav-top flex col align-start space-between'>\n        <button\n          className='btn-toggle-sidenav flex center align-center'\n          onClick={() => toggleShownBar()}\n        >\n          {isBarShown ? (\n            <ArrowBackIosIcon className='arrow-back' />\n          ) : (\n            <ArrowForwardIosIcon />\n          )}\n        </button>\n        <h2>My Boards:</h2>\n        <button\n          className='btn-add flex align-center'\n          onClick={() => toggleInput()}\n        >\n          {/* onClick={() => onAdd('new board')}> */}\n          <AddCircleOutlineRounded />\n          Add\n        </button>\n        <button\n          className='btn-filter flex align-center'\n          // onClick={focus}\n        >\n          <FilterListIcon />\n          Filters\n        </button>\n        {!isFilterShown && (\n          <button\n            className='btn-filter flex align-center'\n            onClick={() => toggleSarech()}\n          >\n            <SearchIcon />\n            Search\n          </button>\n        )}\n        {isFilterShown && (\n          <BoardFilter\n            inputRef={inputRef}\n            toggleSarech={toggleSarech}\n            getBoradsForDisplay={getBoradsForDisplay}\n          />\n        )}\n      </div>\n      <div className='board-side-nav-bottom flex col'>\n        <BoardList\n          boards={boardsForDisplay || boards}\n          // boards={getBoradsForDisplay()}\n          onRemove={onRemove}\n        />\n        {isInputShown && (\n          <form onSubmit={(ev) => addBoard(ev)}>\n            <input\n              className='input-new-board'\n              type='text'\n              placeholder='Enter board name'\n              onChange={(ev) => handelChange(ev)}\n              autoFocus\n            />\n          </form>\n        )}\n      </div>\n    </section>\n  );\n}\n","import { httpService } from './httpService'\nconst SCORE_FOR_REVIEW = 10\nconst BASE_URL = 'api'\n\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getUsers,\n    getById,\n    remove,\n    update,\n    getLoggedinUser,\n    increaseScore,\n    addNotification\n}\n\nfunction getUsers() {\n    return httpService.get(`${BASE_URL}/user`)\n}\n\nfunction getById(userId) {\n    return httpService.get(`${BASE_URL}/user/${userId}`)\n}\n\nfunction remove(userId) {\n    return httpService.delete(`${BASE_URL}/user/${userId}`)\n}\n\nasync function update(user) {\n    user = await httpService.put(`${BASE_URL}/user/${user._id}`, user)\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\n}\n\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\n    const user = getLoggedinUser()\n    user.score = user.score + by || by\n    await update(user)\n    return user.score\n}\n\nasync function login(userCred) {\n    const user = await httpService.post(`${BASE_URL}/auth/login`, userCred)\n    if (user) return _saveLocalUser(user)\n}\n\nasync function signup(userCred) {\n    const user = await httpService.post(`${BASE_URL}/auth/signup`, userCred)\n    return _saveLocalUser(user)\n}\n\nasync function logout() {\n    sessionStorage.clear()\n    return await httpService.post(`${BASE_URL}/auth/logout`)\n}\n\nfunction _saveLocalUser(user) {\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\n    return user\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\n}\n\nasync function addNotification(userId, notification) {\n    const user = await getById(userId)\n    user.notifications.push(notification)\n    return user\n}\n\n\n","import { userService } from '../../services/userService'\n\n\n\nexport function loadUsers() {\n    return async dispatch => {\n        try {\n            dispatch({ type: 'LOADING_START' })\n            const users = await userService.getUsers()\n            dispatch({ type: 'SET_USERS', users })\n        } catch (err) {\n            console.log('UserActions: err in loadUsers', err)\n        } finally {\n            dispatch({ type: 'LOADING_DONE' })\n        }\n    }\n}\n\nexport function removeUser(userId) {\n    return async dispatch => {\n        try {\n            await userService.remove(userId)\n            dispatch({ type: 'REMOVE_USER', userId })\n        } catch (err) {\n            console.log('UserActions: err in removeUser', err)\n        }\n    }\n}\n\nexport function updateUser(newUser) {\n    return async dispatch => {\n        try {\n            const loggedInUser = await userService.getById(newUser._id)\n            if (loggedInUser) {\n                dispatch({ type: 'SET_USER', user: newUser })\n                userService.update(newUser)\n            }\n        } catch (err) {\n            console.log('user Actions: err in updateUser', err)\n        } finally {\n        }\n    }\n}\n\nexport function checkUserLogin() {\n\n}\n\nexport function loginUser(user) {\n    return async dispatch => {\n        try {\n            dispatch({ type: 'LOGIN_USER', user })\n        } catch (err) {\n            console.log('user Actions: err in loginUser', err)\n        } finally {\n        }\n    }\n\n}\n\nexport function login(userCreds) {\n    return async dispatch => {\n        try {\n            const user = await userService.login(userCreds)\n            if (user) {\n                dispatch({ type: 'SET_USER', user })\n                return user\n            }\n        } catch (err) {\n            console.log('UserActions: err in login', err)\n        }\n    }\n}\n\nexport function signup(userCreds) {\n    console.log('userCreds is:', userCreds);\n    return async dispatch => {\n        try {\n            const user = await userService.signup(userCreds)\n            dispatch({ type: 'SET_USER', user })\n            return user\n        } catch (err) {\n            console.log('UserActions: err in signup', err)\n        }\n    }\n}\n\nexport function logout() {\n    return async dispatch => {\n        try {\n            await userService.logout()\n            dispatch({ type: 'SET_USER', user: null })\n        } catch (err) {\n            console.log('UserActions: err in logout', err)\n        }\n    }\n}\n","export function NotificationPreview({ notification }) {\n  return (\n    <section className='noti-preview'>\n      <span>{notification.byUser.fullname}</span>\n      <span className='noti-content'>{notification.content}</span>\n    </section>\n  );\n}\n","import { NotificationPreview } from \"./NotificationPreview\"\n\nexport function NotificationList({ notifications }) {\n    return (\n        <section>\n            {notifications?.map((notification, idx) => {\n                return (\n                    <NotificationPreview\n                        key={idx}\n                        notification={notification}\n                    />\n                )\n            })}\n        </section>\n    )\n}\n","import { NotificationList } from './NotificationList';\n\nexport function NotificationModal({ notifications }) {\n  return (\n    <section className='noti-modal'>\n      <span className='noti-header'>notifications:</span>\n      <NotificationList notifications={notifications} />\n    </section>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.f06faa17.png\";","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, updateUser } from '../store/actions/userAction';\nimport { Avatar } from '@material-ui/core';\n\nimport {\n  NotificationsNone,\n  AppsOutlined,\n  ExitToAppOutlined,\n  EventNoteOutlined,\n  GitHub,\n  LinkedIn,\n} from '@material-ui/icons';\nimport { NotificationModal } from './notification/NotificationModal';\nimport logo from '../assets/styles/logo/logo.png';\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\nimport { socketService } from '../services/socketService';\n// import { storageService } from '../services/storageService';\n\nimport React from 'react';\n\nexport function AppHeader() {\n  const { loggedInUser } = useSelector((state) => state.userReducer);\n  const [isNotificationModalShown, setIsNotificationModalShown] =\n    useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [isNewNotification, setIsNewNotification] = useState(false);\n  const [isHamburgerOpen, setIsHamburgerOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socketService.on('board add notification', (notification) => {\n      const copyNotifications = [notification, ...loggedInUser.notifications];\n      setNotifications(copyNotifications);\n      setIsNewNotification(true);\n      const newLoggedInUser = { ...loggedInUser };\n      newLoggedInUser.notifications = copyNotifications;\n      dispatch(updateUser(newLoggedInUser));\n    });\n    setNotifications(loggedInUser.notifications);\n    // console.log('loggedInUser is:', loggedInUser);\n    // const logdin = storageService.load('loggedInUser')\n    // console.log('sessionStorage.loggedInUser is:', logdin);\n    return () => {\n      socketService.off('board add notification');\n    };\n  }, []);\n\n  useEffect(() => {\n    setNotifications(loggedInUser.notifications);\n  }, [loggedInUser]);\n  const toggleShowModal = () => {\n    setIsNotificationModalShown(!isNotificationModalShown);\n    setIsNewNotification(false);\n  };\n\n  const toggleHamburger = () => {\n    setIsHamburgerOpen(!isHamburgerOpen);\n  };\n\n  return (\n    <div className='header-main flex'>\n      <div className='tab-name'>Hi,{loggedInUser?.fullname || 'Guest'}</div>\n      <div className='header-left-panel flex col'>\n        <div className='header-left-logo'>\n          <Link to='/'>\n            <img src={logo} alt='Logo' />\n          </Link>\n        </div>\n        <div className='header-left-top flex col'>\n          <Link className='header-item' to='/board' title='My Boards'>\n            <AppsOutlined />\n          </Link>\n          <span\n            title='Notifications'\n            className='notifications header-item'\n            onClick={() => toggleShowModal()}\n          >\n            <NotificationsNone />\n            {isNewNotification && <div className='new-notification'></div>}\n\n            {isNotificationModalShown && (\n              <NotificationModal notifications={notifications} />\n            )}\n          </span>\n          {isNotificationModalShown && (\n            <div onClick={() => toggleShowModal()} className='screen'></div>\n          )}\n        </div>\n        <div\n          className={`header-left-bottom flex col end ${\n            !isHamburgerOpen && 'open'\n          }`}\n        >\n          <span className='event-note header-item flex align-center'>\n            <Link to='/myweek' title='My week'>\n              <EventNoteOutlined />\n            </Link>\n          </span>\n          <span className='person header-item flex align-center'>\n            <Link to='/profile' title='My profile'>\n              <Avatar\n                className='avatar'\n                alt={`${loggedInUser?.fullname || 'G'} `}\n                src={loggedInUser?.url || 'G'}\n              />\n            </Link>\n          </span>\n          <span className='exit-to-app header-item flex align-center'>\n            <Link to='' onClick={() => dispatch(logout())} title='Logout'>\n              <ExitToAppOutlined />\n            </Link>\n          </span>\n        </div>\n      </div>\n      <div className='header-right-panel flex col'>\n        <div className='header-right-top'></div>\n        <div className='header-right-middle flex col align-center'>\n          <GitHub className='header-item' />\n          <LinkedIn className='header-item' />\n        </div>\n        <div className='header-right-bottom'></div>\n      </div>\n      <button className='hamburger' onClick={() => toggleHamburger()}>\n        <MenuOutlinedIcon className='hamburger' />\n      </button>\n      {isHamburgerOpen && (\n        <div\n          className='dark-screen-nover'\n          onClick={() => toggleHamburger()}\n        ></div>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo3.409b1259.gif\";","export default __webpack_public_path__ + \"static/media/loader.9719333e.mp4\";","import React from 'react';\nimport loader from '../assets/logo/loader.mp4';\n\nexport function Logo() {\n  return (\n    <div className='loader-container flex center align-center'>\n      <video width='600' height='600' autoPlay loop preload='true'>\n        <source src={loader} type='video/mp4'></source>\n      </video>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nexport function ModalMsg({ msgOpen }) {\n    const { msg } = useSelector(state => state.boardReducer)\n\n    return (\n        <div className={`modal-msg ${msgOpen ? 'open' : 'close'} `}>\n            <span>{msg}</span>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, useHistory } from 'react-router-dom'\n\nimport { loadBoards, removeBoard, addBoard, setActiveBoard, setMsg } from '../store/actions/boardAction'\nimport { BoardDetails } from '../cmps/board/BoardDetails'\nimport { BoardSideNav } from '../cmps/board/BoardSideNav'\nimport { AppHeader } from '../cmps/AppHeader'\nimport logo3 from '../assets/logo/logo3.gif'\n\nimport React from 'react'\nimport { Logo } from '../cmps/Logo'\nimport { ModalMsg } from '../cmps/ModalMsg'\n// import { storageService } from '../services/storageService'\n\nexport function BoardApp(props) {\n    const { loggedInUser } = useSelector(state => state.userReducer)\n    const { boards, activeBoard, msg } = useSelector(state => state.boardReducer)\n    const [isLoading, setIsLoadinge] = useState(false)\n    const [isLogo, setIsLogo] = useState(false)\n    const [msgOpen, setMsgOpen] = useState(false)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        setIsLogo(true)\n        setTimeout(async () => {\n            await getBoards()\n\n        }, 4000);\n    }, [])\n\n    useEffect(() => {\n        if (!loggedInUser) return\n        setIsLoadinge(true)\n        setTimeout(() => {\n            setIsLoadinge(false)\n        }, 4000);\n    }, [history])\n\n    useEffect(() => {\n        if (msg) {\n            setMsgOpen(true)\n            setTimeout(() => {\n                setMsgOpen(false)\n                dispatch(setMsg(null))\n            }, 1700);\n        }\n        if (msg === 'Add Board successfully') {\n            const num = boards.length\n            history.push(`/board/${boards[num - 1]._id}`)\n        }\n    }, [msg])\n\n    const getBoards = async () => {\n        // const dispatch(checkUserLogin())\n        const boards = await onLoadBoards()\n        if (boards) {\n\n            await onSetActiveBoard()\n        }\n\n        setIsLogo(false)\n\n    }\n\n    const onLoadBoards = async () => {\n        dispatch(loadBoards())\n            .then(res => history.push(`/board/${res[0]._id}`))\n\n    }\n\n    const onSetActiveBoard = async () => {\n        dispatch(setActiveBoard(boards[0]))\n\n    }\n\n    const onRemove = async (boardId) => {\n        dispatch(removeBoard(boardId))\n        if (activeBoard._id === boardId) {\n            const num = boards.findIndex(activeBoard => activeBoard._id === boardId)\n            history.push(`/board/${boards[num - 1]._id}`)\n        }\n    }\n\n    const onAdd = async (board, user) => {\n        dispatch(addBoard(board, user))\n    }\n\n    // if (isLoading) return <img src={logo3} alt=\"logo\" width=\"300\" height=\"300\" />\n\n    return (\n        <section className=\"board-app flex\">\n            <AppHeader />\n            {isLogo && <Logo />}\n            {(!isLoading && !isLogo) && <section className=\"board-main flex\">\n                < BoardSideNav\n                    onRemove={(boardId) => onRemove(boardId)}\n                    onAdd={(board, user) => onAdd(board, user)}\n                />\n                <Switch>\n                    <Route path=\"/board/:boardId\" component={BoardDetails} />\n                </Switch>\n                {<ModalMsg msgOpen={msgOpen} />}\n            </section>}\n\n        </section >\n    )\n}\n","import logo from '../assets/styles/logo/logo.png'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { login } from '../store/actions/userAction'\n\nexport function Home() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n    }, [])\n\n    const runDemo = () => {\n        let loggedinUser = {\n            isAdmin: false,\n            fullname: \"Guest Guestis\",\n            username: \"Guest\",\n            password: \"0000\",\n            email: \"Guest@gmail.com\",\n            phoneNumber: \"0524735510\",\n            birthday: \"20/02/2000\",\n            company: \"Mister Bit.\",\n        }\n        sessionStorage.setItem('loggedinUser', JSON.stringify(loggedinUser))\n        dispatch(login(loggedinUser))\n    }\n\n    return (\n        <section className=\"home flex col\" >\n            <div className=\"home-header flex start align-center\">\n                <Link to=\"/login\" title=\"Login\">Login</Link>\n                {/* <Link to=\"/login\" title=\"Sign-Up\">Sign-Up</Link> */}\n            </div>\n            <div className=\"home-main flex\">\n                <div className=\"first-panel flex col center align-start\">\n                    <h1>Join the future</h1>\n                    <p>\n                        The next step in multi-planning and productivity!\n                         <br />\n                        <span>Sheny</span> will help you keep track of hundreds of tasks.\n                        <br />\n                        An efficient way to manage your co-workers / employees.\n                        <br />\n                        Half the hassle, twice the fun.\n                    </p>\n                    <Link to=\"/board\" title=\"Demo\" onClick={() => runDemo()}><button>Start Here!</button></Link>\n\n                </div>\n                <div className=\"second-panel\">\n                    <img src={logo} alt=\"Logo\" />\n                </div>\n            </div>\n        </section>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nvar dateFormat = require('dateformat');\n\nexport function TaskToWeek({ board, userId }) {\n  // const [userActive, setUserActive] = useState('')\n  const [userTasks, setUserTasks] = useState([]);\n\n  useEffect(() => {\n    findTasksPerUser(userId);\n  }, []);\n\n  const findTasksPerUser = (userId) => {\n    // const { board } = this.state\n    const { groups } = board;\n    const userTasks = [];\n    groups.forEach((group) => {\n      let tasks = group.tasks.filter((task) =>\n        task.members.find((member) => member._id === userId)\n      );\n      if (tasks.length) {\n        tasks = tasks.map((task) => {\n          task.groupName = group.name;\n          task.boardName = board.name;\n          return task;\n        });\n        userTasks.push(...tasks);\n      }\n    });\n    setUserTasks(userTasks);\n  };\n\n  const changeDate = (date) => {\n    const startDate = dateFormat(date.startDate, 'dd-mm-yyyy');\n    const endDate = dateFormat(date.endDate, 'dd-mm-yyyy');\n    const localDate = `${startDate} / ${endDate}`;\n    return localDate;\n  };\n\n  return (\n    <section>\n      {userTasks.map((task) => {\n        return (\n          <div key={task.id} className='tasks-user flex space-between'>\n            <div className='left flex col'>\n              <span>{task.name}</span>\n              <div>\n                <Link\n                  to={`/board/${board._id}`}\n                >{`At: ${task.boardName}`}</Link>\n                {'>'}\n                <Link to={`/board/${board._id}`}>{`${task.groupName}`}</Link>\n              </div>\n            </div>\n            <div className='right flex'>{changeDate(task.dateRange)}</div>\n          </div>\n        );\n      })}\n    </section>\n  );\n}\n","import { TaskToWeek } from './TaskToWeek';\n\nexport function ListMyWeek({ boards, userId }) {\n  return (\n    <div className='list'>\n      {boards.map((board) => {\n        return <TaskToWeek key={board._id} board={board} userId={userId} />;\n      })}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/calendar.5a3c2ae0.png\";","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport { loadBoards } from '../store/actions/boardAction'\nimport { AppHeader } from '../cmps/AppHeader'\nimport { ListMyWeek } from '../cmps/ListMyWeek'\nimport Calendar from '../assets/icons/calendar.png'\n\nexport function MyWeek() {\n    const { loggedInUser } = useSelector(state => state.userReducer)\n    const { boards } = useSelector(state => state.boardReducer)\n    const [boardsForDisplay, setBoardsForDisplay] = useState(null)\n    const [isTaskShown, setIsTaskShown] = useState(true)\n    const [filterBy, setFilterBy] = useState({ txt: '' })\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(loadBoards())\n        if (!boards || !boards.length) {\n            return\n        }\n    }, [])\n\n    const toggleTasksMode = () => {\n        setIsTaskShown(!isTaskShown)\n    }\n\n    const handleChange = (ev) => {\n        const filter = { ...filterBy }\n        filter.txt = ev.target.value\n        setFilterBy(filter)\n        getBoardsForDisplay()\n    }\n\n    const getBoardsForDisplay = () => {\n        if (!filterBy) return setBoardsForDisplay(null)\n    }\n\n    return (\n        <React.Fragment>\n            <AppHeader />\n            <section className=\"my-week\">\n                <div className=\"top flex space-around align-center\">\n                    <img src={Calendar} alt=\"\" />\n                    <h2>Hey {loggedInUser.username} ,You have 4 assignments this week</h2>\n                </div>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search\"\n                    onChange={() => handleChange()}\n                />\n                <div className=\"bottom\">\n                    <div className=\"flex space-between\">\n                        <p>Tasks For You:</p>\n                        <Button onClick={() => toggleTasksMode()}>{(isTaskShown) ? 'Close tasks' : 'Open tasks'}</Button>\n                    </div>\n                    {isTaskShown && <ListMyWeek boards={boards} userId={loggedInUser._id} />}\n                </div>\n            </section>\n        </React.Fragment >\n    )\n}\n","import React, { useEffect, useState } from 'react';\n\nexport function ModalProfile({\n  user,\n  keyModal,\n  setIsModalShown,\n  onUpdateUser,\n}) {\n  const [value, setValue] = useState('');\n  const [typeToInput, setTypeToInput] = useState('');\n  useEffect(() => {\n    checkTypeInput();\n    setValue(user[keyModal]);\n  }, []);\n\n  const handleChange = (ev) => {\n    const { value } = ev.target;\n    setValue(value);\n  };\n  const updateUser = () => {\n    onUpdateUser(value);\n    setIsModalShown(false);\n  };\n\n  const checkTypeInput = () => {\n    if (keyModal === 'birthday') {\n      setTypeToInput('date');\n    } else if (keyModal === 'phone') {\n      setTypeToInput('number');\n    } else {\n      setTypeToInput('text');\n    }\n  };\n\n  return (\n    <div className='modal-profile '>\n      <button onClick={() => setIsModalShown(false)}>X</button>\n      <h1>{keyModal}</h1>\n      <form onSubmit={() => updateUser()}>\n        <input\n          type={typeToInput}\n          value={value}\n          autoFocus='on'\n          onChange={handleChange}\n        />\n        <button type='submit'>Save info</button>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Person, Mail, Phone, Cake, Work } from '@material-ui/icons';\n\nimport { Avatar } from '@material-ui/core';\nimport { AppHeader } from '../cmps/AppHeader';\nimport { userService } from '../services/userService';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeUser, updateUser } from '../store/actions/userAction';\nimport { ListMyWeek } from '../cmps/ListMyWeek';\nimport { ModalProfile } from '../cmps/profile/ModalProfile';\n\nexport function Profile() {\n  const { boards } = useSelector((state) => state.boardReducer);\n  const { loggedInUser } = useSelector((state) => state.userReducer);\n  const [user, setUser] = useState({});\n  const [initials, setInitials] = useState('');\n  const [isModalShown, setIsModalShown] = useState(false);\n  const [keyModal, setKeyModal] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadUser();\n    getInitials('tak took');\n  }, []);\n\n  const loadUser = async () => {\n    const user = await userService.getLoggedinUser();\n    const initials = getInitials(user.fullname);\n    setUser(user);\n    setInitials(initials);\n  };\n\n  const getInitials = (fullname) => {\n    const names = fullname.split(' ');\n    const initials = names[0].charAt(0) + names[1].charAt(0);\n    return initials.toUpperCase();\n  };\n  const onRemoveUser = () => {\n    dispatch(removeUser(user._id));\n  };\n\n  const onUpdateUser = (value) => {\n    const newUser = { ...user };\n    newUser[keyModal] = value;\n    setUser(newUser);\n    dispatch(updateUser(newUser));\n  };\n\n  const changeInfo = (key) => {\n    setIsModalShown(true);\n    setKeyModal(key);\n  };\n\n  if (user === {}) return <div>Loading...</div>;\n  return (\n    <React.Fragment>\n      <AppHeader />\n      <section className='profile flex col space-between'>\n        <div className='profile-header flex col align-center'>\n          <div>{initials}</div>\n          <h1>{user.fullname}</h1>\n        </div>\n        <div className='profile-main flex '>\n          {/* <div className='first-panel '>\n            <h2>My Boards</h2>\n            <ListMyWeek boards={boards} userId={loggedInUser._id} />\n        </div> */}\n\n          {/* <div className='second-panel '>\n            <h2>My Tasks</h2>\n            <ul className='tasks-list clean-list'>\n              <li>from board ⇒ task name </li>\n              <li>from board ⇒ task name </li>\n              <li>from board ⇒ task name </li>\n            </ul>\n          </div> */}\n\n          <div className='third-panel'>\n            <Avatar\n              className='avatar'\n              alt={`${user.fullname || 'G'} `}\n              src={user.url || 'G'}\n            />\n            <div className='clean-list'>\n              <li onClick={() => changeInfo('fullname', user.fullname)}>\n                <Person />\n                <span>User name:</span>\n                {user.fullname}\n              </li>\n              <li onClick={() => changeInfo('email', user.email)}>\n                <Mail />\n                <span>Email:</span>\n                {user.email}\n              </li>\n              <li onClick={() => changeInfo('phone', user.phone)}>\n                <Phone />\n                <span>Phone:</span>\n                {user.phone}\n              </li>\n              <li onClick={() => changeInfo('birthday', user.birthday)}>\n                <Cake />\n                <span>Birthday:</span>\n                {user.birthday}\n              </li>\n              <li onClick={() => changeInfo('company', user.company)}>\n                <Work />\n                <span>Company:</span>\n                {user.company}{' '}\n              </li>\n            </div>\n            <button className='btn-remove' onClick={() => onRemoveUser()}>\n              Remove user\n            </button>\n          </div>\n        </div>\n        {isModalShown && (\n          <ModalProfile\n            user={user}\n            keyModal={keyModal}\n            setIsModalShown={setIsModalShown}\n            onUpdateUser={onUpdateUser}\n          />\n        )}\n        {isModalShown && <div className='dark-screen-nover'></div>}\n      </section>\n    </React.Fragment>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport { login, signup, logout } from '../store/actions/userAction';\nimport { userService } from '../services/userService';\nimport { Button } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { Link, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport FacebookLogin from 'react-facebook-login';\n\nimport React from 'react';\n\nexport function Login() {\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [msg, setMsg] = useState('');\n  const [loggedinUser, setLoggedinUser] = useState(\n    userService.getLoggedinUser()\n  );\n  const [loginCred, setLoginCred] = useState({ username: '', password: '' });\n  const [signupCred, setSignupCred] = useState({\n    username: '',\n    password: '',\n    fullname: '',\n    email: '',\n    url: '',\n  });\n  const [isFocus, setIsFocus] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // const { loggedInUser } = useSelector(state => state.userReducer)\n\n  const loginHandleChange = (ev) => {\n    const { name, value } = ev.target;\n    const prevState = { ...loginCred };\n    prevState[name] = value;\n    setLoginCred(prevState);\n    // setLoginCred( ...loginCred,loginCred[name]: value)\n  };\n\n  const signupHandleChange = (ev) => {\n    const { name, value } = ev.target;\n    const prevState = { ...signupCred };\n    prevState[name] = value;\n    setSignupCred(prevState);\n  };\n\n  const doLogin = async (ev) => {\n    ev.preventDefault();\n    const { username, password } = loginCred;\n    if (!username || !password) {\n      return setMsg('Please enter user/password');\n    }\n    try {\n      const userCreds = { username, password };\n      dispatch(login(userCreds)).then((user) => {\n        if (user) {\n          setLoginCred({ username: '', password: '' });\n          history.push('/board');\n        }\n      });\n    } catch (err) {\n      setMsg('Login failed, try again.');\n    }\n  };\n  const doSignup = async (ev) => {\n    ev.preventDefault();\n    const { username, password, fullname, email, url } = signupCred;\n    if (!username || !password || !fullname) {\n      return setMsg('All inputs are required');\n    }\n    const signupCreds = { username, password, fullname, email, url };\n    try {\n      dispatch(signup(signupCreds)).then((user) => {\n        if (user) {\n          setSignupCred({\n            username: '',\n            password: '',\n            fullname: '',\n            email: '',\n          });\n          history.push('/board');\n        }\n      });\n    } catch {\n      this.setState({ msg: 'signup failed, try again.' });\n    }\n  };\n\n  const newUser = (ev) => {\n    ev.preventDefault();\n    const lastAns = isNewUser;\n    setIsNewUser(!lastAns);\n  };\n\n  const responseFacebook = (response) => {\n    if (response) {\n      const firstName = response.name.split(' ').slice(0, -1).join(' ');\n      setSignupCred({\n        username: firstName,\n        password: '',\n        fullname: response.name,\n        email: response.email,\n        url: response.picture.data.url,\n      });\n      setIsNewUser(true);\n      setIsFocus(true);\n      setMsg('Need to create a Password');\n    }\n  };\n\n  const componentClicked = () => {};\n\n  let loginSection = (\n    <form className='login flex col' onSubmit={(ev) => doLogin(ev)}>\n      <h2>Login</h2>\n      <Input\n        type='text'\n        name='username'\n        autoComplete='off'\n        value={loginCred.username}\n        onChange={(ev) => loginHandleChange(ev)}\n        placeholder='Username'\n      />\n      <Input\n        id='standard-adornment-password'\n        type='password'\n        name='password'\n        autoComplete='off'\n        value={loginCred.password}\n        onChange={(ev) => loginHandleChange(ev)}\n        placeholder='Password'\n      />\n      <button className='btn-login'>Login</button>\n      <a href='\\login' onClick={(ev) => newUser(ev)}>\n        Dont have a user? signup\n      </a>\n      {/* <Button color=\"primary\"><FacebookIcon className=\"face-icon\" />Login with Facebook</Button> */}\n      <span className='login-facebook-btn'>\n        <FacebookIcon className='face-icon' />\n        <FacebookLogin\n          appId='4052456894837314'\n          autoLoad={false}\n          fields='name,email,picture'\n          onClick={componentClicked}\n          callback={responseFacebook}\n        />\n      </span>\n    </form>\n  );\n  let signupSection = (\n    <form className='signup flex col' onSubmit={(ev) => doSignup(ev)}>\n      <h2>Signup</h2>\n      <Input\n        type='text'\n        value={signupCred.username}\n        name='username'\n        autoComplete='off'\n        onChange={(ev) => signupHandleChange(ev)}\n        placeholder='Username*'\n      />\n      <Input\n        name='password'\n        type='password'\n        value={signupCred.password}\n        autoComplete='off'\n        autoFocus={isFocus}\n        onChange={(ev) => signupHandleChange(ev)}\n        placeholder='Password*'\n      />\n      <Input\n        type='text'\n        name='fullname'\n        value={signupCred.fullname}\n        autoComplete='off'\n        onChange={(ev) => signupHandleChange(ev)}\n        placeholder='Full name*'\n      />\n      <Input\n        type='text'\n        name='email'\n        value={signupCred.email}\n        autoComplete='off'\n        onChange={(ev) => signupHandleChange(ev)}\n        placeholder='Email*'\n      />\n      <button className='btn-login'>Signup</button>\n      <a href='/' onClick={(ev) => newUser(ev)}>\n        {' '}\n        have a user? login\n      </a>\n    </form>\n  );\n  return (\n    <div className='login-page'>\n      <Link className='arrow-left' data-title={'Back to Home'} to='/'>\n        <ArrowBackIcon />\n      </Link>\n      <section className='login-container'>\n        <AccountCircleIcon />\n        <p>{msg}</p>\n        {loggedinUser && (\n          <div>\n            <h3>\n              Are you sure you want to exit? {loggedinUser.fullname}\n              <button className='btn-login' onClick={dispatch(logout())}>\n                Logout\n              </button>\n            </h3>\n          </div>\n        )}\n\n        {!loggedinUser && !isNewUser && loginSection}\n        {!loggedinUser && isNewUser && signupSection}\n      </section>\n    </div>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport { BoardApp } from './pages/BoardApp';\nimport { Home } from './pages/Home';\nimport { MyWeek } from './pages/MyWeek';\nimport { Profile } from './pages/Profile';\nimport { Login } from './pages/Login';\nimport { socketService } from './services/socketService';\n\nsocketService.setup()\n\n\nexport function App() {\n  return (\n    <Router>\n      <div className=\"App flex\">\n        <main className=\"flex\">\n          <Switch>\n            <Route path=\"/board\" component={BoardApp} />\n            <Route path=\"/myweek\" component={MyWeek} />\n            <Route path=\"/profile/:userId?\" component={Profile} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </main>\n\n      </div>\n    </Router>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    activeBoard: null,\n    boards: [],\n    msg: ''\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards };\n        case 'SET_BOARD':\n            return { ...state, activeBoard: action.board };\n        case 'REMOVE_BOARD':\n            return { ...state, boards: state.boards.filter(board => action.boardId !== board._id) };\n        case 'ADD_BOARD':\n            return { ...state, boards: [...state.boards, action.board] };\n        case 'SET_MSG':\n            return { ...state, msg: action.msg }\n        default:\n            return state;\n    }\n}\n","\nlet localLoggedinUser = {\n    isAdmin: false,\n    fullname: \"Guest Guestis\",\n    username: \"Guest\",\n    email: \"Guest@gmail.com\",\n    phone: \"0524735510\",\n    birthday: \"20/02/2000\",\n    company: \"Mister Bit.\",\n    url: '',\n    createdAt: Date.now(),\n    notifications: [],\n\n}\n\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\n\nconst initialState = {\n    loggedInUser: localLoggedinUser,\n    users: []\n}\n\nexport function userReducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'SET_USER':\n            return { ...state, loggedInUser: action.user }\n        case 'LOGOUT_USER':\n            return { ...state, loggedInUser: null }\n        case 'REMOVE_USER':\n            return {\n                ...state,\n                users: state.users.filter(user => user._id !== action.userId)\n            }\n        case 'SET_USERS':\n            return { ...state, users: action.users }\n        default:\n            return state\n    }\n}\n","import thunk from 'redux-thunk';\nimport {\n    createStore,\n    applyMiddleware,\n    compose,\n    combineReducers\n} from 'redux';\n\nimport { boardReducer } from './reducers/boardReducer';\nimport { userReducer } from './reducers/userReducer';\n\n\n\nconst rootReducer = combineReducers({\n    boardReducer,\n    userReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport { App } from './App.jsx';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorkerRegistration.unregister();"],"sourceRoot":""}